// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "relu_16_14_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic relu_16_14_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic relu_16_14_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> relu_16_14_s::ap_ST_fsm_state1 = "1";
const sc_lv<7> relu_16_14_s::ap_ST_fsm_state2 = "10";
const sc_lv<7> relu_16_14_s::ap_ST_fsm_state3 = "100";
const sc_lv<7> relu_16_14_s::ap_ST_fsm_state4 = "1000";
const sc_lv<7> relu_16_14_s::ap_ST_fsm_state5 = "10000";
const sc_lv<7> relu_16_14_s::ap_ST_fsm_state6 = "100000";
const sc_lv<7> relu_16_14_s::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> relu_16_14_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> relu_16_14_s::ap_const_lv32_1 = "1";
const sc_lv<1> relu_16_14_s::ap_const_lv1_0 = "0";
const sc_lv<32> relu_16_14_s::ap_const_lv32_2 = "10";
const sc_lv<32> relu_16_14_s::ap_const_lv32_3 = "11";
const sc_lv<32> relu_16_14_s::ap_const_lv32_4 = "100";
const sc_lv<32> relu_16_14_s::ap_const_lv32_5 = "101";
const sc_lv<5> relu_16_14_s::ap_const_lv5_0 = "00000";
const sc_lv<1> relu_16_14_s::ap_const_lv1_1 = "1";
const sc_lv<4> relu_16_14_s::ap_const_lv4_0 = "0000";
const sc_lv<32> relu_16_14_s::ap_const_lv32_6 = "110";
const sc_lv<16> relu_16_14_s::ap_const_lv16_0 = "0000000000000000";
const sc_lv<5> relu_16_14_s::ap_const_lv5_10 = "10000";
const sc_lv<5> relu_16_14_s::ap_const_lv5_1 = "1";
const sc_lv<4> relu_16_14_s::ap_const_lv4_E = "1110";
const sc_lv<4> relu_16_14_s::ap_const_lv4_1 = "1";
const sc_lv<5> relu_16_14_s::ap_const_lv5_2 = "10";
const bool relu_16_14_s::ap_const_boolean_1 = true;

relu_16_14_s::relu_16_14_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    test_hcmp_16ns_16g8j_U28 = new test_hcmp_16ns_16g8j<1,1,16,16,1>("test_hcmp_16ns_16g8j_U28");
    test_hcmp_16ns_16g8j_U28->din0(in_load_reg_274);
    test_hcmp_16ns_16g8j_U28->din1(ap_var_for_const0);
    test_hcmp_16ns_16g8j_U28->opcode(ap_var_for_const1);
    test_hcmp_16ns_16g8j_U28->dout(tmp_fu_95_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln117_2_fu_213_p2);
    sensitive << ( sub_ln117_1_reg_251 );
    sensitive << ( zext_ln117_5_fu_209_p1 );

    SC_METHOD(thread_add_ln117_fu_162_p2);
    sensitive << ( sext_ln117_reg_238 );
    sensitive << ( zext_ln117_4_fu_158_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln114_fu_100_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln114_fu_100_p2 );

    SC_METHOD(thread_c_fu_203_p2);
    sensitive << ( c_0_reg_84 );

    SC_METHOD(thread_icmp_ln114_fu_100_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( m_0_reg_62 );

    SC_METHOD(thread_icmp_ln115_fu_146_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( r_0_reg_73 );

    SC_METHOD(thread_icmp_ln116_fu_197_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( c_0_reg_84 );

    SC_METHOD(thread_in_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln117_6_fu_218_p1 );

    SC_METHOD(thread_in_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_m_fu_106_p2);
    sensitive << ( m_0_reg_62 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( zext_ln117_6_reg_264 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( select_ln117_reg_280 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_p_shl2_cast_fu_171_p3);
    sensitive << ( trunc_ln117_fu_167_p1 );

    SC_METHOD(thread_r_fu_152_p2);
    sensitive << ( r_0_reg_73 );

    SC_METHOD(thread_select_ln117_fu_223_p3);
    sensitive << ( in_load_reg_274 );
    sensitive << ( tmp_fu_95_p2 );

    SC_METHOD(thread_sext_ln117_1_fu_187_p1);
    sensitive << ( tmp_4_fu_179_p3 );

    SC_METHOD(thread_sext_ln117_fu_142_p1);
    sensitive << ( sub_ln117_fu_136_p2 );

    SC_METHOD(thread_sub_ln117_1_fu_191_p2);
    sensitive << ( p_shl2_cast_fu_171_p3 );
    sensitive << ( sext_ln117_1_fu_187_p1 );

    SC_METHOD(thread_sub_ln117_fu_136_p2);
    sensitive << ( zext_ln117_fu_120_p1 );
    sensitive << ( zext_ln117_3_fu_132_p1 );

    SC_METHOD(thread_tmp_4_fu_179_p3);
    sensitive << ( add_ln117_fu_162_p2 );

    SC_METHOD(thread_tmp_9_fu_112_p3);
    sensitive << ( m_0_reg_62 );

    SC_METHOD(thread_tmp_s_fu_124_p3);
    sensitive << ( m_0_reg_62 );

    SC_METHOD(thread_trunc_ln117_fu_167_p1);
    sensitive << ( add_ln117_fu_162_p2 );

    SC_METHOD(thread_zext_ln117_3_fu_132_p1);
    sensitive << ( tmp_s_fu_124_p3 );

    SC_METHOD(thread_zext_ln117_4_fu_158_p1);
    sensitive << ( r_0_reg_73 );

    SC_METHOD(thread_zext_ln117_5_fu_209_p1);
    sensitive << ( c_0_reg_84 );

    SC_METHOD(thread_zext_ln117_6_fu_218_p1);
    sensitive << ( add_ln117_2_fu_213_p2 );

    SC_METHOD(thread_zext_ln117_fu_120_p1);
    sensitive << ( tmp_9_fu_112_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln114_fu_100_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln115_fu_146_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln116_fu_197_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "relu_16_14_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r_address0, "(port)in_r_address0");
    sc_trace(mVcdFile, in_r_ce0, "(port)in_r_ce0");
    sc_trace(mVcdFile, in_r_q0, "(port)in_r_q0");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, m_fu_106_p2, "m_fu_106_p2");
    sc_trace(mVcdFile, m_reg_233, "m_reg_233");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sext_ln117_fu_142_p1, "sext_ln117_fu_142_p1");
    sc_trace(mVcdFile, sext_ln117_reg_238, "sext_ln117_reg_238");
    sc_trace(mVcdFile, icmp_ln114_fu_100_p2, "icmp_ln114_fu_100_p2");
    sc_trace(mVcdFile, r_fu_152_p2, "r_fu_152_p2");
    sc_trace(mVcdFile, r_reg_246, "r_reg_246");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sub_ln117_1_fu_191_p2, "sub_ln117_1_fu_191_p2");
    sc_trace(mVcdFile, sub_ln117_1_reg_251, "sub_ln117_1_reg_251");
    sc_trace(mVcdFile, icmp_ln115_fu_146_p2, "icmp_ln115_fu_146_p2");
    sc_trace(mVcdFile, c_fu_203_p2, "c_fu_203_p2");
    sc_trace(mVcdFile, c_reg_259, "c_reg_259");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln117_6_fu_218_p1, "zext_ln117_6_fu_218_p1");
    sc_trace(mVcdFile, zext_ln117_6_reg_264, "zext_ln117_6_reg_264");
    sc_trace(mVcdFile, icmp_ln116_fu_197_p2, "icmp_ln116_fu_197_p2");
    sc_trace(mVcdFile, in_load_reg_274, "in_load_reg_274");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, select_ln117_fu_223_p3, "select_ln117_fu_223_p3");
    sc_trace(mVcdFile, select_ln117_reg_280, "select_ln117_reg_280");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, m_0_reg_62, "m_0_reg_62");
    sc_trace(mVcdFile, r_0_reg_73, "r_0_reg_73");
    sc_trace(mVcdFile, c_0_reg_84, "c_0_reg_84");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_9_fu_112_p3, "tmp_9_fu_112_p3");
    sc_trace(mVcdFile, tmp_s_fu_124_p3, "tmp_s_fu_124_p3");
    sc_trace(mVcdFile, zext_ln117_fu_120_p1, "zext_ln117_fu_120_p1");
    sc_trace(mVcdFile, zext_ln117_3_fu_132_p1, "zext_ln117_3_fu_132_p1");
    sc_trace(mVcdFile, sub_ln117_fu_136_p2, "sub_ln117_fu_136_p2");
    sc_trace(mVcdFile, zext_ln117_4_fu_158_p1, "zext_ln117_4_fu_158_p1");
    sc_trace(mVcdFile, add_ln117_fu_162_p2, "add_ln117_fu_162_p2");
    sc_trace(mVcdFile, trunc_ln117_fu_167_p1, "trunc_ln117_fu_167_p1");
    sc_trace(mVcdFile, tmp_4_fu_179_p3, "tmp_4_fu_179_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_171_p3, "p_shl2_cast_fu_171_p3");
    sc_trace(mVcdFile, sext_ln117_1_fu_187_p1, "sext_ln117_1_fu_187_p1");
    sc_trace(mVcdFile, zext_ln117_5_fu_209_p1, "zext_ln117_5_fu_209_p1");
    sc_trace(mVcdFile, add_ln117_2_fu_213_p2, "add_ln117_2_fu_213_p2");
    sc_trace(mVcdFile, tmp_fu_95_p2, "tmp_fu_95_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

relu_16_14_s::~relu_16_14_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete test_hcmp_16ns_16g8j_U28;
}

void relu_16_14_s::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv16_0;
}

void relu_16_14_s::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_2;
}

void relu_16_14_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln115_fu_146_p2.read()))) {
        c_0_reg_84 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        c_0_reg_84 = c_reg_259.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln115_fu_146_p2.read(), ap_const_lv1_1))) {
        m_0_reg_62 = m_reg_233.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        m_0_reg_62 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln116_fu_197_p2.read(), ap_const_lv1_1))) {
        r_0_reg_73 = r_reg_246.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln114_fu_100_p2.read(), ap_const_lv1_0))) {
        r_0_reg_73 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_reg_259 = c_fu_203_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in_load_reg_274 = in_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        m_reg_233 = m_fu_106_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_reg_246 = r_fu_152_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        select_ln117_reg_280 = select_ln117_fu_223_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln114_fu_100_p2.read(), ap_const_lv1_0))) {
        sext_ln117_reg_238 = sext_ln117_fu_142_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln115_fu_146_p2.read()))) {
        sub_ln117_1_reg_251 = sub_ln117_1_fu_191_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln116_fu_197_p2.read()))) {
        zext_ln117_6_reg_264 = zext_ln117_6_fu_218_p1.read();
    }
}

void relu_16_14_s::thread_add_ln117_2_fu_213_p2() {
    add_ln117_2_fu_213_p2 = (!sub_ln117_1_reg_251.read().is_01() || !zext_ln117_5_fu_209_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(sub_ln117_1_reg_251.read()) + sc_biguint<13>(zext_ln117_5_fu_209_p1.read()));
}

void relu_16_14_s::thread_add_ln117_fu_162_p2() {
    add_ln117_fu_162_p2 = (!sext_ln117_reg_238.read().is_01() || !zext_ln117_4_fu_158_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(sext_ln117_reg_238.read()) + sc_biguint<11>(zext_ln117_4_fu_158_p1.read()));
}

void relu_16_14_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void relu_16_14_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void relu_16_14_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void relu_16_14_s::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void relu_16_14_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void relu_16_14_s::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void relu_16_14_s::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void relu_16_14_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln114_fu_100_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void relu_16_14_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void relu_16_14_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln114_fu_100_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void relu_16_14_s::thread_c_fu_203_p2() {
    c_fu_203_p2 = (!c_0_reg_84.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(c_0_reg_84.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void relu_16_14_s::thread_icmp_ln114_fu_100_p2() {
    icmp_ln114_fu_100_p2 = (!m_0_reg_62.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(m_0_reg_62.read() == ap_const_lv5_10);
}

void relu_16_14_s::thread_icmp_ln115_fu_146_p2() {
    icmp_ln115_fu_146_p2 = (!r_0_reg_73.read().is_01() || !ap_const_lv4_E.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_73.read() == ap_const_lv4_E);
}

void relu_16_14_s::thread_icmp_ln116_fu_197_p2() {
    icmp_ln116_fu_197_p2 = (!c_0_reg_84.read().is_01() || !ap_const_lv4_E.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_84.read() == ap_const_lv4_E);
}

void relu_16_14_s::thread_in_r_address0() {
    in_r_address0 =  (sc_lv<12>) (zext_ln117_6_fu_218_p1.read());
}

void relu_16_14_s::thread_in_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        in_r_ce0 = ap_const_logic_1;
    } else {
        in_r_ce0 = ap_const_logic_0;
    }
}

void relu_16_14_s::thread_m_fu_106_p2() {
    m_fu_106_p2 = (!m_0_reg_62.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(m_0_reg_62.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void relu_16_14_s::thread_out_r_address0() {
    out_r_address0 =  (sc_lv<12>) (zext_ln117_6_reg_264.read());
}

void relu_16_14_s::thread_out_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void relu_16_14_s::thread_out_r_d0() {
    out_r_d0 = select_ln117_reg_280.read();
}

void relu_16_14_s::thread_out_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void relu_16_14_s::thread_p_shl2_cast_fu_171_p3() {
    p_shl2_cast_fu_171_p3 = esl_concat<9,4>(trunc_ln117_fu_167_p1.read(), ap_const_lv4_0);
}

void relu_16_14_s::thread_r_fu_152_p2() {
    r_fu_152_p2 = (!r_0_reg_73.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(r_0_reg_73.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void relu_16_14_s::thread_select_ln117_fu_223_p3() {
    select_ln117_fu_223_p3 = (!tmp_fu_95_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_fu_95_p2.read()[0].to_bool())? in_load_reg_274.read(): ap_const_lv16_0);
}

void relu_16_14_s::thread_sext_ln117_1_fu_187_p1() {
    sext_ln117_1_fu_187_p1 = esl_sext<13,12>(tmp_4_fu_179_p3.read());
}

void relu_16_14_s::thread_sext_ln117_fu_142_p1() {
    sext_ln117_fu_142_p1 = esl_sext<11,10>(sub_ln117_fu_136_p2.read());
}

void relu_16_14_s::thread_sub_ln117_1_fu_191_p2() {
    sub_ln117_1_fu_191_p2 = (!p_shl2_cast_fu_171_p3.read().is_01() || !sext_ln117_1_fu_187_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(p_shl2_cast_fu_171_p3.read()) - sc_bigint<13>(sext_ln117_1_fu_187_p1.read()));
}

void relu_16_14_s::thread_sub_ln117_fu_136_p2() {
    sub_ln117_fu_136_p2 = (!zext_ln117_fu_120_p1.read().is_01() || !zext_ln117_3_fu_132_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln117_fu_120_p1.read()) - sc_biguint<10>(zext_ln117_3_fu_132_p1.read()));
}

void relu_16_14_s::thread_tmp_4_fu_179_p3() {
    tmp_4_fu_179_p3 = esl_concat<11,1>(add_ln117_fu_162_p2.read(), ap_const_lv1_0);
}

void relu_16_14_s::thread_tmp_9_fu_112_p3() {
    tmp_9_fu_112_p3 = esl_concat<5,4>(m_0_reg_62.read(), ap_const_lv4_0);
}

void relu_16_14_s::thread_tmp_s_fu_124_p3() {
    tmp_s_fu_124_p3 = esl_concat<5,1>(m_0_reg_62.read(), ap_const_lv1_0);
}

void relu_16_14_s::thread_trunc_ln117_fu_167_p1() {
    trunc_ln117_fu_167_p1 = add_ln117_fu_162_p2.read().range(9-1, 0);
}

void relu_16_14_s::thread_zext_ln117_3_fu_132_p1() {
    zext_ln117_3_fu_132_p1 = esl_zext<10,6>(tmp_s_fu_124_p3.read());
}

void relu_16_14_s::thread_zext_ln117_4_fu_158_p1() {
    zext_ln117_4_fu_158_p1 = esl_zext<11,4>(r_0_reg_73.read());
}

void relu_16_14_s::thread_zext_ln117_5_fu_209_p1() {
    zext_ln117_5_fu_209_p1 = esl_zext<13,4>(c_0_reg_84.read());
}

void relu_16_14_s::thread_zext_ln117_6_fu_218_p1() {
    zext_ln117_6_fu_218_p1 = esl_zext<64,13>(add_ln117_2_fu_213_p2.read());
}

void relu_16_14_s::thread_zext_ln117_fu_120_p1() {
    zext_ln117_fu_120_p1 = esl_zext<10,9>(tmp_9_fu_112_p3.read());
}

void relu_16_14_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln114_fu_100_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln115_fu_146_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln116_fu_197_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

