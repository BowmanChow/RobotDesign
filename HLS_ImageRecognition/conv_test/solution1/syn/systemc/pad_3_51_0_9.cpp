// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pad_3_51_0_9.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pad_3_51_0_9::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pad_3_51_0_9::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> pad_3_51_0_9::ap_ST_fsm_state1 = "1";
const sc_lv<5> pad_3_51_0_9::ap_ST_fsm_state2 = "10";
const sc_lv<5> pad_3_51_0_9::ap_ST_fsm_state3 = "100";
const sc_lv<5> pad_3_51_0_9::ap_ST_fsm_state4 = "1000";
const sc_lv<5> pad_3_51_0_9::ap_ST_fsm_state5 = "10000";
const sc_lv<32> pad_3_51_0_9::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pad_3_51_0_9::ap_const_lv32_1 = "1";
const sc_lv<32> pad_3_51_0_9::ap_const_lv32_2 = "10";
const sc_lv<1> pad_3_51_0_9::ap_const_lv1_0 = "0";
const sc_lv<32> pad_3_51_0_9::ap_const_lv32_3 = "11";
const sc_lv<2> pad_3_51_0_9::ap_const_lv2_0 = "00";
const sc_lv<1> pad_3_51_0_9::ap_const_lv1_1 = "1";
const sc_lv<8> pad_3_51_0_9::ap_const_lv8_0 = "00000000";
const sc_lv<6> pad_3_51_0_9::ap_const_lv6_0 = "000000";
const sc_lv<32> pad_3_51_0_9::ap_const_lv32_4 = "100";
const sc_lv<8> pad_3_51_0_9::ap_const_lv8_33 = "110011";
const sc_lv<2> pad_3_51_0_9::ap_const_lv2_3 = "11";
const sc_lv<2> pad_3_51_0_9::ap_const_lv2_1 = "1";
const sc_lv<6> pad_3_51_0_9::ap_const_lv6_33 = "110011";
const sc_lv<6> pad_3_51_0_9::ap_const_lv6_1 = "1";
const sc_lv<13> pad_3_51_0_9::ap_const_lv13_33 = "110011";
const bool pad_3_51_0_9::ap_const_boolean_1 = true;

pad_3_51_0_9::pad_3_51_0_9(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln11_fu_102_p2);
    sensitive << ( phi_mul_reg_68 );

    SC_METHOD(thread_add_ln19_2_fu_168_p2);
    sensitive << ( mul_ln19_reg_199 );
    sensitive << ( zext_ln19_5_fu_164_p1 );

    SC_METHOD(thread_add_ln19_fu_136_p2);
    sensitive << ( phi_mul_reg_68 );
    sensitive << ( zext_ln19_fu_132_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln11_fu_108_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln11_fu_108_p2 );

    SC_METHOD(thread_i_fu_114_p2);
    sensitive << ( i_0_reg_57 );

    SC_METHOD(thread_icmp_ln11_fu_108_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_57 );

    SC_METHOD(thread_icmp_ln13_fu_120_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_80 );

    SC_METHOD(thread_icmp_ln15_fu_152_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_0_reg_91 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln19_6_fu_173_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_j_fu_126_p2);
    sensitive << ( j_0_reg_80 );

    SC_METHOD(thread_k_fu_158_p2);
    sensitive << ( k_0_reg_91 );

    SC_METHOD(thread_mul_ln19_fu_146_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( mul_ln19_fu_146_p00 );

    SC_METHOD(thread_mul_ln19_fu_146_p00);
    sensitive << ( add_ln19_fu_136_p2 );

    SC_METHOD(thread_mul_ln19_fu_146_p2);
    sensitive << ( mul_ln19_fu_146_p0 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( zext_ln19_6_reg_212 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( input_r_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_zext_ln19_5_fu_164_p1);
    sensitive << ( k_0_reg_91 );

    SC_METHOD(thread_zext_ln19_6_fu_173_p1);
    sensitive << ( add_ln19_2_fu_168_p2 );

    SC_METHOD(thread_zext_ln19_fu_132_p1);
    sensitive << ( j_0_reg_80 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln13_fu_120_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln15_fu_152_p2 );
    sensitive << ( icmp_ln11_fu_108_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pad_3_51_0_9_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, add_ln11_fu_102_p2, "add_ln11_fu_102_p2");
    sc_trace(mVcdFile, add_ln11_reg_178, "add_ln11_reg_178");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_114_p2, "i_fu_114_p2");
    sc_trace(mVcdFile, i_reg_186, "i_reg_186");
    sc_trace(mVcdFile, j_fu_126_p2, "j_fu_126_p2");
    sc_trace(mVcdFile, j_reg_194, "j_reg_194");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, mul_ln19_fu_146_p2, "mul_ln19_fu_146_p2");
    sc_trace(mVcdFile, mul_ln19_reg_199, "mul_ln19_reg_199");
    sc_trace(mVcdFile, icmp_ln13_fu_120_p2, "icmp_ln13_fu_120_p2");
    sc_trace(mVcdFile, k_fu_158_p2, "k_fu_158_p2");
    sc_trace(mVcdFile, k_reg_207, "k_reg_207");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln19_6_fu_173_p1, "zext_ln19_6_fu_173_p1");
    sc_trace(mVcdFile, zext_ln19_6_reg_212, "zext_ln19_6_reg_212");
    sc_trace(mVcdFile, icmp_ln15_fu_152_p2, "icmp_ln15_fu_152_p2");
    sc_trace(mVcdFile, i_0_reg_57, "i_0_reg_57");
    sc_trace(mVcdFile, phi_mul_reg_68, "phi_mul_reg_68");
    sc_trace(mVcdFile, j_0_reg_80, "j_0_reg_80");
    sc_trace(mVcdFile, icmp_ln11_fu_108_p2, "icmp_ln11_fu_108_p2");
    sc_trace(mVcdFile, k_0_reg_91, "k_0_reg_91");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln19_fu_132_p1, "zext_ln19_fu_132_p1");
    sc_trace(mVcdFile, add_ln19_fu_136_p2, "add_ln19_fu_136_p2");
    sc_trace(mVcdFile, mul_ln19_fu_146_p0, "mul_ln19_fu_146_p0");
    sc_trace(mVcdFile, zext_ln19_5_fu_164_p1, "zext_ln19_5_fu_164_p1");
    sc_trace(mVcdFile, add_ln19_2_fu_168_p2, "add_ln19_2_fu_168_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul_ln19_fu_146_p00, "mul_ln19_fu_146_p00");
#endif

    }
}

pad_3_51_0_9::~pad_3_51_0_9() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void pad_3_51_0_9::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_120_p2.read(), ap_const_lv1_1))) {
        i_0_reg_57 = i_reg_186.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_57 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_fu_108_p2.read()))) {
        j_0_reg_80 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln15_fu_152_p2.read(), ap_const_lv1_1))) {
        j_0_reg_80 = j_reg_194.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_120_p2.read(), ap_const_lv1_0))) {
        k_0_reg_91 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_0_reg_91 = k_reg_207.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_120_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_68 = add_ln11_reg_178.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_68 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln11_reg_178 = add_ln11_fu_102_p2.read();
        i_reg_186 = i_fu_114_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_194 = j_fu_126_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_reg_207 = k_fu_158_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_120_p2.read(), ap_const_lv1_0))) {
        mul_ln19_reg_199 = mul_ln19_fu_146_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_152_p2.read()))) {
        zext_ln19_6_reg_212 = zext_ln19_6_fu_173_p1.read();
    }
}

void pad_3_51_0_9::thread_add_ln11_fu_102_p2() {
    add_ln11_fu_102_p2 = (!phi_mul_reg_68.read().is_01() || !ap_const_lv8_33.is_01())? sc_lv<8>(): (sc_biguint<8>(phi_mul_reg_68.read()) + sc_biguint<8>(ap_const_lv8_33));
}

void pad_3_51_0_9::thread_add_ln19_2_fu_168_p2() {
    add_ln19_2_fu_168_p2 = (!mul_ln19_reg_199.read().is_01() || !zext_ln19_5_fu_164_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(mul_ln19_reg_199.read()) + sc_biguint<13>(zext_ln19_5_fu_164_p1.read()));
}

void pad_3_51_0_9::thread_add_ln19_fu_136_p2() {
    add_ln19_fu_136_p2 = (!phi_mul_reg_68.read().is_01() || !zext_ln19_fu_132_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(phi_mul_reg_68.read()) + sc_biguint<8>(zext_ln19_fu_132_p1.read()));
}

void pad_3_51_0_9::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pad_3_51_0_9::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pad_3_51_0_9::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pad_3_51_0_9::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pad_3_51_0_9::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pad_3_51_0_9::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln11_fu_108_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pad_3_51_0_9::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pad_3_51_0_9::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln11_fu_108_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pad_3_51_0_9::thread_i_fu_114_p2() {
    i_fu_114_p2 = (!i_0_reg_57.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_0_reg_57.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void pad_3_51_0_9::thread_icmp_ln11_fu_108_p2() {
    icmp_ln11_fu_108_p2 = (!i_0_reg_57.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_57.read() == ap_const_lv2_3);
}

void pad_3_51_0_9::thread_icmp_ln13_fu_120_p2() {
    icmp_ln13_fu_120_p2 = (!j_0_reg_80.read().is_01() || !ap_const_lv6_33.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_80.read() == ap_const_lv6_33);
}

void pad_3_51_0_9::thread_icmp_ln15_fu_152_p2() {
    icmp_ln15_fu_152_p2 = (!k_0_reg_91.read().is_01() || !ap_const_lv6_33.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_91.read() == ap_const_lv6_33);
}

void pad_3_51_0_9::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<13>) (zext_ln19_6_fu_173_p1.read());
}

void pad_3_51_0_9::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void pad_3_51_0_9::thread_j_fu_126_p2() {
    j_fu_126_p2 = (!j_0_reg_80.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_0_reg_80.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void pad_3_51_0_9::thread_k_fu_158_p2() {
    k_fu_158_p2 = (!k_0_reg_91.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(k_0_reg_91.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void pad_3_51_0_9::thread_mul_ln19_fu_146_p0() {
    mul_ln19_fu_146_p0 =  (sc_lv<8>) (mul_ln19_fu_146_p00.read());
}

void pad_3_51_0_9::thread_mul_ln19_fu_146_p00() {
    mul_ln19_fu_146_p00 = esl_zext<13,8>(add_ln19_fu_136_p2.read());
}

void pad_3_51_0_9::thread_mul_ln19_fu_146_p2() {
    mul_ln19_fu_146_p2 = (!mul_ln19_fu_146_p0.read().is_01() || !ap_const_lv13_33.is_01())? sc_lv<13>(): sc_biguint<8>(mul_ln19_fu_146_p0.read()) * sc_biguint<13>(ap_const_lv13_33);
}

void pad_3_51_0_9::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<13>) (zext_ln19_6_reg_212.read());
}

void pad_3_51_0_9::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void pad_3_51_0_9::thread_output_r_d0() {
    output_r_d0 = input_r_q0.read();
}

void pad_3_51_0_9::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void pad_3_51_0_9::thread_zext_ln19_5_fu_164_p1() {
    zext_ln19_5_fu_164_p1 = esl_zext<13,6>(k_0_reg_91.read());
}

void pad_3_51_0_9::thread_zext_ln19_6_fu_173_p1() {
    zext_ln19_6_fu_173_p1 = esl_zext<64,13>(add_ln19_2_fu_168_p2.read());
}

void pad_3_51_0_9::thread_zext_ln19_fu_132_p1() {
    zext_ln19_fu_132_p1 = esl_zext<8,6>(j_0_reg_80.read());
}

void pad_3_51_0_9::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln11_fu_108_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_120_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln15_fu_152_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

