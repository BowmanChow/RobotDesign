// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pad_3_51_0_9_HH_
#define _pad_3_51_0_9_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct pad_3_51_0_9 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_out< sc_lv<13> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    pad_3_51_0_9(sc_module_name name);
    SC_HAS_PROCESS(pad_3_51_0_9);

    ~pad_3_51_0_9();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > add_ln11_fu_102_p2;
    sc_signal< sc_lv<8> > add_ln11_reg_178;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<2> > i_fu_114_p2;
    sc_signal< sc_lv<2> > i_reg_186;
    sc_signal< sc_lv<6> > j_fu_126_p2;
    sc_signal< sc_lv<6> > j_reg_194;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<13> > mul_ln19_fu_146_p2;
    sc_signal< sc_lv<13> > mul_ln19_reg_199;
    sc_signal< sc_lv<1> > icmp_ln13_fu_120_p2;
    sc_signal< sc_lv<6> > k_fu_158_p2;
    sc_signal< sc_lv<6> > k_reg_207;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > zext_ln19_6_fu_173_p1;
    sc_signal< sc_lv<64> > zext_ln19_6_reg_212;
    sc_signal< sc_lv<1> > icmp_ln15_fu_152_p2;
    sc_signal< sc_lv<2> > i_0_reg_57;
    sc_signal< sc_lv<8> > phi_mul_reg_68;
    sc_signal< sc_lv<6> > j_0_reg_80;
    sc_signal< sc_lv<1> > icmp_ln11_fu_108_p2;
    sc_signal< sc_lv<6> > k_0_reg_91;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > zext_ln19_fu_132_p1;
    sc_signal< sc_lv<8> > add_ln19_fu_136_p2;
    sc_signal< sc_lv<8> > mul_ln19_fu_146_p0;
    sc_signal< sc_lv<13> > zext_ln19_5_fu_164_p1;
    sc_signal< sc_lv<13> > add_ln19_2_fu_168_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_lv<13> > mul_ln19_fu_146_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<8> ap_const_lv8_33;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<6> ap_const_lv6_33;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<13> ap_const_lv13_33;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln11_fu_102_p2();
    void thread_add_ln19_2_fu_168_p2();
    void thread_add_ln19_fu_136_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_114_p2();
    void thread_icmp_ln11_fu_108_p2();
    void thread_icmp_ln13_fu_120_p2();
    void thread_icmp_ln15_fu_152_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_fu_126_p2();
    void thread_k_fu_158_p2();
    void thread_mul_ln19_fu_146_p0();
    void thread_mul_ln19_fu_146_p00();
    void thread_mul_ln19_fu_146_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_zext_ln19_5_fu_164_p1();
    void thread_zext_ln19_6_fu_173_p1();
    void thread_zext_ln19_fu_132_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
