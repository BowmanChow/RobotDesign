// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _relu_16_14_s_HH_
#define _relu_16_14_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "test_hcmp_16ns_16g8j.h"

namespace ap_rtl {

struct relu_16_14_s : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<16> > in_r_q0;
    sc_out< sc_lv<12> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<16> > out_r_d0;
    sc_signal< sc_lv<16> > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    relu_16_14_s(sc_module_name name);
    SC_HAS_PROCESS(relu_16_14_s);

    ~relu_16_14_s();

    sc_trace_file* mVcdFile;

    test_hcmp_16ns_16g8j<1,1,16,16,1>* test_hcmp_16ns_16g8j_U28;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > m_fu_106_p2;
    sc_signal< sc_lv<5> > m_reg_233;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > sext_ln117_fu_142_p1;
    sc_signal< sc_lv<11> > sext_ln117_reg_238;
    sc_signal< sc_lv<1> > icmp_ln114_fu_100_p2;
    sc_signal< sc_lv<4> > r_fu_152_p2;
    sc_signal< sc_lv<4> > r_reg_246;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<13> > sub_ln117_1_fu_191_p2;
    sc_signal< sc_lv<13> > sub_ln117_1_reg_251;
    sc_signal< sc_lv<1> > icmp_ln115_fu_146_p2;
    sc_signal< sc_lv<4> > c_fu_203_p2;
    sc_signal< sc_lv<4> > c_reg_259;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > zext_ln117_6_fu_218_p1;
    sc_signal< sc_lv<64> > zext_ln117_6_reg_264;
    sc_signal< sc_lv<1> > icmp_ln116_fu_197_p2;
    sc_signal< sc_lv<16> > in_load_reg_274;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<16> > select_ln117_fu_223_p3;
    sc_signal< sc_lv<16> > select_ln117_reg_280;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<5> > m_0_reg_62;
    sc_signal< sc_lv<4> > r_0_reg_73;
    sc_signal< sc_lv<4> > c_0_reg_84;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<9> > tmp_9_fu_112_p3;
    sc_signal< sc_lv<6> > tmp_s_fu_124_p3;
    sc_signal< sc_lv<10> > zext_ln117_fu_120_p1;
    sc_signal< sc_lv<10> > zext_ln117_3_fu_132_p1;
    sc_signal< sc_lv<10> > sub_ln117_fu_136_p2;
    sc_signal< sc_lv<11> > zext_ln117_4_fu_158_p1;
    sc_signal< sc_lv<11> > add_ln117_fu_162_p2;
    sc_signal< sc_lv<9> > trunc_ln117_fu_167_p1;
    sc_signal< sc_lv<12> > tmp_4_fu_179_p3;
    sc_signal< sc_lv<13> > p_shl2_cast_fu_171_p3;
    sc_signal< sc_lv<13> > sext_ln117_1_fu_187_p1;
    sc_signal< sc_lv<13> > zext_ln117_5_fu_209_p1;
    sc_signal< sc_lv<13> > add_ln117_2_fu_213_p2;
    sc_signal< sc_lv<1> > tmp_fu_95_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln117_2_fu_213_p2();
    void thread_add_ln117_fu_162_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_fu_203_p2();
    void thread_icmp_ln114_fu_100_p2();
    void thread_icmp_ln115_fu_146_p2();
    void thread_icmp_ln116_fu_197_p2();
    void thread_in_r_address0();
    void thread_in_r_ce0();
    void thread_m_fu_106_p2();
    void thread_out_r_address0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_p_shl2_cast_fu_171_p3();
    void thread_r_fu_152_p2();
    void thread_select_ln117_fu_223_p3();
    void thread_sext_ln117_1_fu_187_p1();
    void thread_sext_ln117_fu_142_p1();
    void thread_sub_ln117_1_fu_191_p2();
    void thread_sub_ln117_fu_136_p2();
    void thread_tmp_4_fu_179_p3();
    void thread_tmp_9_fu_112_p3();
    void thread_tmp_s_fu_124_p3();
    void thread_trunc_ln117_fu_167_p1();
    void thread_zext_ln117_3_fu_132_p1();
    void thread_zext_ln117_4_fu_158_p1();
    void thread_zext_ln117_5_fu_209_p1();
    void thread_zext_ln117_6_fu_218_p1();
    void thread_zext_ln117_fu_120_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
