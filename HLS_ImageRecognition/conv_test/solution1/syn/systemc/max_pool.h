// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_HH_
#define _max_pool_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "test_hcmp_16ns_16g8j.h"
#include "test_mul_mul_6ns_ocq.h"

namespace ap_rtl {

struct max_pool : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<16> > in_r_q0;
    sc_out< sc_lv<12> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<16> > out_r_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool(sc_module_name name);
    SC_HAS_PROCESS(max_pool);

    ~max_pool();

    sc_trace_file* mVcdFile;

    test_hcmp_16ns_16g8j<1,1,16,16,1>* test_hcmp_16ns_16g8j_U44;
    test_mul_mul_6ns_ocq<1,1,6,15,15>* test_mul_mul_6ns_ocq_U45;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<15> > zext_ln73_fu_178_p1;
    sc_signal< sc_lv<15> > zext_ln73_reg_366;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > add_ln73_fu_182_p2;
    sc_signal< sc_lv<9> > add_ln73_reg_371;
    sc_signal< sc_lv<10> > add_ln73_1_fu_188_p2;
    sc_signal< sc_lv<10> > add_ln73_1_reg_376;
    sc_signal< sc_lv<5> > m_fu_200_p2;
    sc_signal< sc_lv<5> > m_reg_384;
    sc_signal< sc_lv<4> > i_fu_212_p2;
    sc_signal< sc_lv<4> > i_reg_392;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > zext_ln80_fu_226_p1;
    sc_signal< sc_lv<32> > zext_ln80_reg_397;
    sc_signal< sc_lv<1> > icmp_ln75_fu_206_p2;
    sc_signal< sc_lv<32> > zext_ln80_1_fu_236_p1;
    sc_signal< sc_lv<32> > zext_ln80_1_reg_402;
    sc_signal< sc_lv<12> > mul_ln87_fu_254_p2;
    sc_signal< sc_lv<12> > mul_ln87_reg_407;
    sc_signal< sc_lv<4> > j_fu_266_p2;
    sc_signal< sc_lv<4> > j_reg_415;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > zext_ln81_fu_280_p1;
    sc_signal< sc_lv<32> > zext_ln81_reg_420;
    sc_signal< sc_lv<1> > icmp_ln77_fu_260_p2;
    sc_signal< sc_lv<32> > zext_ln81_1_fu_290_p1;
    sc_signal< sc_lv<32> > zext_ln81_1_reg_425;
    sc_signal< sc_lv<15> > mul_ln83_fu_360_p2;
    sc_signal< sc_lv<15> > mul_ln83_reg_433;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln80_fu_294_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln81_fu_322_p2;
    sc_signal< sc_lv<32> > y_1_fu_341_p2;
    sc_signal< sc_lv<32> > y_1_reg_446;
    sc_signal< sc_lv<32> > x_1_fu_347_p2;
    sc_signal< sc_lv<16> > max_record_reg_456;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<16> > max_record_2_fu_353_p3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<5> > m_0_reg_72;
    sc_signal< sc_lv<10> > phi_mul_reg_83;
    sc_signal< sc_lv<9> > phi_mul1_reg_94;
    sc_signal< sc_lv<4> > i_0_reg_106;
    sc_signal< sc_lv<1> > icmp_ln73_fu_194_p2;
    sc_signal< sc_lv<4> > j_0_reg_117;
    sc_signal< sc_lv<16> > max_record_0_reg_129;
    sc_signal< sc_lv<32> > x_0_reg_142;
    sc_signal< sc_lv<16> > max_record_1_reg_152;
    sc_signal< sc_lv<32> > y_0_reg_164;
    sc_signal< sc_lv<64> > zext_ln87_3_fu_317_p1;
    sc_signal< sc_lv<64> > zext_ln83_fu_336_p1;
    sc_signal< sc_lv<5> > x_fu_218_p3;
    sc_signal< sc_lv<5> > add_ln80_fu_230_p2;
    sc_signal< sc_lv<9> > zext_ln87_fu_240_p1;
    sc_signal< sc_lv<9> > add_ln87_fu_244_p2;
    sc_signal< sc_lv<9> > mul_ln87_fu_254_p0;
    sc_signal< sc_lv<5> > y_fu_272_p3;
    sc_signal< sc_lv<5> > add_ln81_fu_284_p2;
    sc_signal< sc_lv<15> > trunc_ln83_fu_299_p1;
    sc_signal< sc_lv<12> > zext_ln87_2_fu_308_p1;
    sc_signal< sc_lv<12> > add_ln87_1_fu_312_p2;
    sc_signal< sc_lv<15> > trunc_ln83_1_fu_327_p1;
    sc_signal< sc_lv<15> > add_ln83_1_fu_331_p2;
    sc_signal< sc_lv<1> > tmp_fu_173_p2;
    sc_signal< sc_lv<6> > mul_ln83_fu_360_p0;
    sc_signal< sc_lv<15> > mul_ln83_fu_360_p1;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_lv<12> > mul_ln87_fu_254_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<16> ap_const_lv16_FC00;
    static const sc_lv<9> ap_const_lv9_B;
    static const sc_lv<10> ap_const_lv10_16;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<12> ap_const_lv12_B;
    static const sc_lv<15> ap_const_lv15_16;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln73_1_fu_188_p2();
    void thread_add_ln73_fu_182_p2();
    void thread_add_ln80_fu_230_p2();
    void thread_add_ln81_fu_284_p2();
    void thread_add_ln83_1_fu_331_p2();
    void thread_add_ln87_1_fu_312_p2();
    void thread_add_ln87_fu_244_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_212_p2();
    void thread_icmp_ln73_fu_194_p2();
    void thread_icmp_ln75_fu_206_p2();
    void thread_icmp_ln77_fu_260_p2();
    void thread_icmp_ln80_fu_294_p2();
    void thread_icmp_ln81_fu_322_p2();
    void thread_in_r_address0();
    void thread_in_r_ce0();
    void thread_j_fu_266_p2();
    void thread_m_fu_200_p2();
    void thread_max_record_2_fu_353_p3();
    void thread_mul_ln83_fu_360_p0();
    void thread_mul_ln83_fu_360_p1();
    void thread_mul_ln87_fu_254_p0();
    void thread_mul_ln87_fu_254_p00();
    void thread_mul_ln87_fu_254_p2();
    void thread_out_r_address0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_trunc_ln83_1_fu_327_p1();
    void thread_trunc_ln83_fu_299_p1();
    void thread_x_1_fu_347_p2();
    void thread_x_fu_218_p3();
    void thread_y_1_fu_341_p2();
    void thread_y_fu_272_p3();
    void thread_zext_ln73_fu_178_p1();
    void thread_zext_ln80_1_fu_236_p1();
    void thread_zext_ln80_fu_226_p1();
    void thread_zext_ln81_1_fu_290_p1();
    void thread_zext_ln81_fu_280_p1();
    void thread_zext_ln83_fu_336_p1();
    void thread_zext_ln87_2_fu_308_p1();
    void thread_zext_ln87_3_fu_317_p1();
    void thread_zext_ln87_fu_240_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
