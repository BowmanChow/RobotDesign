// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_1_layerconv1bkb_H__
#define __conv_1_layerconv1bkb_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_1_layerconv1bkb_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 16;
  static const unsigned AddressRange = 216;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_1_layerconv1bkb_ram) {
        ram[0] = "0b0011101101101110";
        ram[1] = "0b0011011110100111";
        ram[2] = "0b0011100010001101";
        ram[3] = "0b0011101011111010";
        ram[4] = "0b0011100000001001";
        ram[5] = "0b0011100011110010";
        ram[6] = "0b0011101000011011";
        ram[7] = "0b0011100110110111";
        ram[8] = "0b0011010101111101";
        ram[9] = "0b1010111011110011";
        ram[10] = "0b0011010010010011";
        ram[11] = "0b0011010000110101";
        ram[12] = "0b1010111011001100";
        ram[13] = "0b1010011111111101";
        ram[14] = "0b1010101010110010";
        ram[15] = "0b1011000010111110";
        ram[16] = "0b1010100100100101";
        ram[17] = "0b0010110100011101";
        ram[18] = "0b1011100100111111";
        ram[19] = "0b1011100010110011";
        ram[20] = "0b1011100101101110";
        ram[21] = "0b1011100010011111";
        ram[22] = "0b1011100101101100";
        ram[23] = "0b1011011111111001";
        ram[24] = "0b1011100001100001";
        ram[25] = "0b1011100000011001";
        ram[26] = "0b1011010010101000";
        ram[27] = "0b1011010110110110";
        ram[28] = "0b1011100101100010";
        ram[29] = "0b1011100100111111";
        ram[30] = "0b1011011100000010";
        ram[31] = "0b1011100000101011";
        ram[32] = "0b1011100101001100";
        ram[33] = "0b1011011111111100";
        ram[34] = "0b1011100001001010";
        ram[35] = "0b1011100001010101";
        ram[36] = "0b0011010000001100";
        ram[37] = "0b0010010110110101";
        ram[38] = "0b1011011110000110";
        ram[39] = "0b0010010110100010";
        ram[40] = "0b0010011001100110";
        ram[41] = "0b1011011000011001";
        ram[42] = "0b0011000110001100";
        ram[43] = "0b0011001110010111";
        ram[44] = "0b1011010000100000";
        ram[45] = "0b0011010001011111";
        ram[46] = "0b1011001101011110";
        ram[47] = "0b1011001101100010";
        ram[48] = "0b0011000110110111";
        ram[49] = "0b1011010000000011";
        ram[50] = "0b1011000000010111";
        ram[51] = "0b0011001111001011";
        ram[52] = "0b0011000011101110";
        ram[53] = "0b1011011000110011";
        ram[54] = "0b0011100001101110";
        ram[55] = "0b0010111100001111";
        ram[56] = "0b0011011100001001";
        ram[57] = "0b0011010001101101";
        ram[58] = "0b0011010111010001";
        ram[59] = "0b0011000101111001";
        ram[60] = "0b0011001000011101";
        ram[61] = "0b0011001001000010";
        ram[62] = "0b0011100000100011";
        ram[63] = "0b0011000000111101";
        ram[64] = "0b1011000010011110";
        ram[65] = "0b1011000100110101";
        ram[66] = "0b0011000101010101";
        ram[67] = "0b1011000001011100";
        ram[68] = "0b1011010100111111";
        ram[69] = "0b1011010000101000";
        ram[70] = "0b1010111001010001";
        ram[71] = "0b0010111000110101";
        ram[72] = "0b1011011100110011";
        ram[73] = "0b1011011001110100";
        ram[74] = "0b1011010001010110";
        ram[75] = "0b1011011101001111";
        ram[76] = "0b1011011101011100";
        ram[77] = "0b1011100011101010";
        ram[78] = "0b1011100100111110";
        ram[79] = "0b1011100000111111";
        ram[80] = "0b1011100000010011";
        ram[81] = "0b1011100110011100";
        ram[82] = "0b1011100100100001";
        ram[83] = "0b1011100000100101";
        ram[84] = "0b1011100001111100";
        ram[85] = "0b1011100100101111";
        ram[86] = "0b1011100100010101";
        ram[87] = "0b1011100010011100";
        ram[88] = "0b1011100001001101";
        ram[89] = "0b1011101010011111";
        ram[90] = "0b0011000010111010";
        ram[91] = "0b0011001001110100";
        ram[92] = "0b1011000000001011";
        ram[93] = "0b1010110000100111";
        ram[94] = "0b0011001001101001";
        ram[95] = "0b0011000110010000";
        ram[96] = "0b0010111101110101";
        ram[97] = "0b1011000110000101";
        ram[98] = "0b0010110011011100";
        ram[99] = "0b0011100001101110";
        ram[100] = "0b0011010100110011";
        ram[101] = "0b0011011111101100";
        ram[102] = "0b0011011001111000";
        ram[103] = "0b0011100000100110";
        ram[104] = "0b0011011000010111";
        ram[105] = "0b0010101101110000";
        ram[106] = "0b0011001101110000";
        ram[107] = "0b0011011101101000";
        ram[108] = "0b0011000010001011";
        ram[109] = "0b1011010010010111";
        ram[110] = "0b0010101011101101";
        ram[111] = "0b0011011001010000";
        ram[112] = "0b0010100110100010";
        ram[113] = "0b1010101100101110";
        ram[114] = "0b0011010100110101";
        ram[115] = "0b1011010000011101";
        ram[116] = "0b1011010101101111";
        ram[117] = "0b0011011000011001";
        ram[118] = "0b1011011101011010";
        ram[119] = "0b0010001101111010";
        ram[120] = "0b0010101001011001";
        ram[121] = "0b1011010001100101";
        ram[122] = "0b1011011110101101";
        ram[123] = "0b1011001010000111";
        ram[124] = "0b1011001011010011";
        ram[125] = "0b1011100101000110";
        ram[126] = "0b1011010101000001";
        ram[127] = "0b1011011101110011";
        ram[128] = "0b1011100010111011";
        ram[129] = "0b1011100000111110";
        ram[130] = "0b1011011010100011";
        ram[131] = "0b1011100001001000";
        ram[132] = "0b1011100100110010";
        ram[133] = "0b1011100000011101";
        ram[134] = "0b1011100110010100";
        ram[135] = "0b1011010011100010";
        ram[136] = "0b1011001110000011";
        ram[137] = "0b1011011110000110";
        ram[138] = "0b1011100001000110";
        ram[139] = "0b1011100000010011";
        ram[140] = "0b1011010011100101";
        ram[141] = "0b1011100001010100";
        ram[142] = "0b1011011101111010";
        ram[143] = "0b1011010111111101";
        ram[144] = "0b1011100101100001";
        ram[145] = "0b1011100011110011";
        ram[146] = "0b1011011111001000";
        ram[147] = "0b1011101010111100";
        ram[148] = "0b1011101001111000";
        ram[149] = "0b1011101100110111";
        ram[150] = "0b1011101011000111";
        ram[151] = "0b1011101001011101";
        ram[152] = "0b1011100100001110";
        ram[153] = "0b1011011010010111";
        ram[154] = "0b1011011001101011";
        ram[155] = "0b1011100000111011";
        ram[156] = "0b1011011010011111";
        ram[157] = "0b1011010110010000";
        ram[158] = "0b1011011010000110";
        ram[159] = "0b1011100011100111";
        ram[160] = "0b1011100110101111";
        ram[161] = "0b1011100001101111";
        ram[162] = "0b1011100000101101";
        ram[163] = "0b1011100100000110";
        ram[164] = "0b1011011111011000";
        ram[165] = "0b1011100001100010";
        ram[166] = "0b1011011111000001";
        ram[167] = "0b1011100010101010";
        ram[168] = "0b1011100100101010";
        ram[169] = "0b1011100101011100";
        ram[170] = "0b1011011010101001";
        ram[171] = "0b1010011111110000";
        ram[172] = "0b0011000111111011";
        ram[173] = "0b0011000001101010";
        ram[174] = "0b0010110101110100";
        ram[175] = "0b0010100001101110";
        ram[176] = "0b0011001001111000";
        ram[177] = "0b1011001001001011";
        ram[178] = "0b0011000011011110";
        ram[179] = "0b0011000000011001";
        ram[180] = "0b0011011001011110";
        ram[181] = "0b0011011010111010";
        ram[182] = "0b0011011001100001";
        ram[183] = "0b0010111001011011";
        ram[184] = "0b0011010010110101";
        ram[185] = "0b0011011101011111";
        ram[186] = "0b0001111111111101";
        ram[187] = "0b0011010010000011";
        ram[188] = "0b0011001001111101";
        ram[189] = "0b1011100010100111";
        ram[190] = "0b1011011101101000";
        ram[191] = "0b1011011100101100";
        ram[192] = "0b1011100100110000";
        ram[193] = "0b1011011000110011";
        ram[194] = "0b1011100011001001";
        ram[195] = "0b1011100010001101";
        ram[196] = "0b1011100110010010";
        ram[197] = "0b1011100100011100";
        ram[198] = "0b0011000011110101";
        ram[199] = "0b0011000010101100";
        ram[200] = "0b0011000110010101";
        ram[201] = "0b0010010000101100";
        ram[202] = "0b0011001000110100";
        ram[203] = "0b0011001100101001";
        ram[204] = "0b0010111110100110";
        ram[205] = "0b0010100100110010";
        ram[206] = "0b1010111100001001";
        ram[207] = "0b0011100000100000";
        ram[208] = "0b0011010111111000";
        ram[209] = "0b0011011001110110";
        ram[210] = "0b0011011001110110";
        ram[211] = "0b0011011011100011";
        ram[212] = "0b0011100000100001";
        ram[213] = "0b0011011010011110";
        ram[214] = "0b0011100011001001";
        ram[215] = "0b0011100100011100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_1_layerconv1bkb) {


static const unsigned DataWidth = 16;
static const unsigned AddressRange = 216;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_1_layerconv1bkb_ram* meminst;


SC_CTOR(conv_1_layerconv1bkb) {
meminst = new conv_1_layerconv1bkb_ram("conv_1_layerconv1bkb_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_1_layerconv1bkb() {
    delete meminst;
}


};//endmodule
#endif
