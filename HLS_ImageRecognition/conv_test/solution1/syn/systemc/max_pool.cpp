// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "max_pool.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic max_pool::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic max_pool::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> max_pool::ap_ST_fsm_state1 = "1";
const sc_lv<8> max_pool::ap_ST_fsm_state2 = "10";
const sc_lv<8> max_pool::ap_ST_fsm_state3 = "100";
const sc_lv<8> max_pool::ap_ST_fsm_state4 = "1000";
const sc_lv<8> max_pool::ap_ST_fsm_state5 = "10000";
const sc_lv<8> max_pool::ap_ST_fsm_state6 = "100000";
const sc_lv<8> max_pool::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> max_pool::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> max_pool::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> max_pool::ap_const_lv32_1 = "1";
const sc_lv<1> max_pool::ap_const_lv1_0 = "0";
const sc_lv<32> max_pool::ap_const_lv32_2 = "10";
const sc_lv<32> max_pool::ap_const_lv32_3 = "11";
const sc_lv<32> max_pool::ap_const_lv32_4 = "100";
const sc_lv<1> max_pool::ap_const_lv1_1 = "1";
const sc_lv<32> max_pool::ap_const_lv32_5 = "101";
const sc_lv<32> max_pool::ap_const_lv32_6 = "110";
const sc_lv<32> max_pool::ap_const_lv32_7 = "111";
const sc_lv<4> max_pool::ap_const_lv4_0 = "0000";
const sc_lv<5> max_pool::ap_const_lv5_0 = "00000";
const sc_lv<16> max_pool::ap_const_lv16_FC00 = "1111110000000000";
const sc_lv<4> max_pool::ap_const_lv4_8 = "1000";
const sc_lv<4> max_pool::ap_const_lv4_1 = "1";
const sc_lv<5> max_pool::ap_const_lv5_10 = "10000";
const sc_lv<5> max_pool::ap_const_lv5_1 = "1";
const sc_lv<6> max_pool::ap_const_lv6_2 = "10";
const sc_lv<5> max_pool::ap_const_lv5_2 = "10";
const bool max_pool::ap_const_boolean_1 = true;

max_pool::max_pool(sc_module_name name) : sc_module(name), mVcdFile(0) {
    test_hcmp_16ns_16g8j_U16 = new test_hcmp_16ns_16g8j<1,1,16,16,1>("test_hcmp_16ns_16g8j_U16");
    test_hcmp_16ns_16g8j_U16->din0(max_record_reg_431);
    test_hcmp_16ns_16g8j_U16->din1(max_record_1_reg_121);
    test_hcmp_16ns_16g8j_U16->opcode(ap_var_for_const0);
    test_hcmp_16ns_16g8j_U16->dout(tmp_fu_142_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln80_fu_205_p2);
    sensitive << ( zext_ln80_fu_197_p1 );

    SC_METHOD(thread_add_ln81_fu_258_p2);
    sensitive << ( zext_ln81_fu_250_p1 );

    SC_METHOD(thread_add_ln83_2_fu_317_p2);
    sensitive << ( tmp_31_cast_reg_408 );
    sensitive << ( trunc_ln83_3_fu_313_p1 );

    SC_METHOD(thread_add_ln83_fu_280_p2);
    sensitive << ( zext_ln83_fu_277_p1 );
    sensitive << ( trunc_ln83_fu_273_p1 );

    SC_METHOD(thread_add_ln87_2_fu_298_p2);
    sensitive << ( tmp_28_cast_reg_382 );
    sensitive << ( zext_ln87_4_fu_294_p1 );

    SC_METHOD(thread_add_ln87_fu_219_p2);
    sensitive << ( zext_ln75_reg_359 );
    sensitive << ( zext_ln87_fu_215_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln73_fu_147_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln73_fu_147_p2 );

    SC_METHOD(thread_i_fu_185_p2);
    sensitive << ( i_0_reg_75 );

    SC_METHOD(thread_icmp_ln73_fu_147_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( m_0_reg_64 );

    SC_METHOD(thread_icmp_ln75_fu_179_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_0_reg_75 );

    SC_METHOD(thread_icmp_ln77_fu_232_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_0_reg_86 );

    SC_METHOD(thread_icmp_ln80_fu_268_p2);
    sensitive << ( zext_ln80_2_reg_377 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_0_reg_111 );

    SC_METHOD(thread_icmp_ln81_fu_308_p2);
    sensitive << ( zext_ln81_2_reg_400 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( y_0_reg_133 );

    SC_METHOD(thread_in_r_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln83_4_fu_322_p1 );

    SC_METHOD(thread_in_r_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_j_fu_238_p2);
    sensitive << ( j_0_reg_86 );

    SC_METHOD(thread_m_fu_153_p2);
    sensitive << ( m_0_reg_64 );

    SC_METHOD(thread_max_record_3_fu_339_p3);
    sensitive << ( max_record_reg_431 );
    sensitive << ( max_record_1_reg_121 );
    sensitive << ( tmp_fu_142_p2 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln87_5_fu_303_p1 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( max_record_0_reg_98 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln80_fu_268_p2 );

    SC_METHOD(thread_tmp_28_cast_fu_224_p3);
    sensitive << ( add_ln87_fu_219_p2 );

    SC_METHOD(thread_tmp_31_cast_fu_286_p3);
    sensitive << ( add_ln83_fu_280_p2 );

    SC_METHOD(thread_tmp_3_fu_167_p3);
    sensitive << ( m_0_reg_64 );

    SC_METHOD(thread_tmp_s_fu_159_p3);
    sensitive << ( m_0_reg_64 );

    SC_METHOD(thread_trunc_ln83_3_fu_313_p1);
    sensitive << ( y_0_reg_133 );

    SC_METHOD(thread_trunc_ln83_fu_273_p1);
    sensitive << ( x_0_reg_111 );

    SC_METHOD(thread_x_2_fu_333_p2);
    sensitive << ( x_0_reg_111 );

    SC_METHOD(thread_x_fu_191_p2);
    sensitive << ( i_0_reg_75 );

    SC_METHOD(thread_y_2_fu_327_p2);
    sensitive << ( y_0_reg_133 );

    SC_METHOD(thread_y_fu_244_p2);
    sensitive << ( j_0_reg_86 );

    SC_METHOD(thread_zext_ln75_fu_175_p1);
    sensitive << ( tmp_3_fu_167_p3 );

    SC_METHOD(thread_zext_ln80_1_fu_201_p1);
    sensitive << ( x_fu_191_p2 );

    SC_METHOD(thread_zext_ln80_2_fu_211_p1);
    sensitive << ( add_ln80_fu_205_p2 );

    SC_METHOD(thread_zext_ln80_fu_197_p1);
    sensitive << ( x_fu_191_p2 );

    SC_METHOD(thread_zext_ln81_1_fu_254_p1);
    sensitive << ( y_fu_244_p2 );

    SC_METHOD(thread_zext_ln81_2_fu_264_p1);
    sensitive << ( add_ln81_fu_258_p2 );

    SC_METHOD(thread_zext_ln81_fu_250_p1);
    sensitive << ( y_fu_244_p2 );

    SC_METHOD(thread_zext_ln83_4_fu_322_p1);
    sensitive << ( add_ln83_2_fu_317_p2 );

    SC_METHOD(thread_zext_ln83_fu_277_p1);
    sensitive << ( tmp_s_reg_354 );

    SC_METHOD(thread_zext_ln87_4_fu_294_p1);
    sensitive << ( j_0_reg_86 );

    SC_METHOD(thread_zext_ln87_5_fu_303_p1);
    sensitive << ( add_ln87_2_fu_298_p2 );

    SC_METHOD(thread_zext_ln87_fu_215_p1);
    sensitive << ( i_0_reg_75 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln73_fu_147_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln75_fu_179_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln77_fu_232_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln80_fu_268_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln81_fu_308_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "max_pool_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r_address0, "(port)in_r_address0");
    sc_trace(mVcdFile, in_r_ce0, "(port)in_r_ce0");
    sc_trace(mVcdFile, in_r_q0, "(port)in_r_q0");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, m_fu_153_p2, "m_fu_153_p2");
    sc_trace(mVcdFile, m_reg_349, "m_reg_349");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_s_fu_159_p3, "tmp_s_fu_159_p3");
    sc_trace(mVcdFile, tmp_s_reg_354, "tmp_s_reg_354");
    sc_trace(mVcdFile, icmp_ln73_fu_147_p2, "icmp_ln73_fu_147_p2");
    sc_trace(mVcdFile, zext_ln75_fu_175_p1, "zext_ln75_fu_175_p1");
    sc_trace(mVcdFile, zext_ln75_reg_359, "zext_ln75_reg_359");
    sc_trace(mVcdFile, i_fu_185_p2, "i_fu_185_p2");
    sc_trace(mVcdFile, i_reg_367, "i_reg_367");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln80_1_fu_201_p1, "zext_ln80_1_fu_201_p1");
    sc_trace(mVcdFile, zext_ln80_1_reg_372, "zext_ln80_1_reg_372");
    sc_trace(mVcdFile, icmp_ln75_fu_179_p2, "icmp_ln75_fu_179_p2");
    sc_trace(mVcdFile, zext_ln80_2_fu_211_p1, "zext_ln80_2_fu_211_p1");
    sc_trace(mVcdFile, zext_ln80_2_reg_377, "zext_ln80_2_reg_377");
    sc_trace(mVcdFile, tmp_28_cast_fu_224_p3, "tmp_28_cast_fu_224_p3");
    sc_trace(mVcdFile, tmp_28_cast_reg_382, "tmp_28_cast_reg_382");
    sc_trace(mVcdFile, j_fu_238_p2, "j_fu_238_p2");
    sc_trace(mVcdFile, j_reg_390, "j_reg_390");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln81_1_fu_254_p1, "zext_ln81_1_fu_254_p1");
    sc_trace(mVcdFile, zext_ln81_1_reg_395, "zext_ln81_1_reg_395");
    sc_trace(mVcdFile, icmp_ln77_fu_232_p2, "icmp_ln77_fu_232_p2");
    sc_trace(mVcdFile, zext_ln81_2_fu_264_p1, "zext_ln81_2_fu_264_p1");
    sc_trace(mVcdFile, zext_ln81_2_reg_400, "zext_ln81_2_reg_400");
    sc_trace(mVcdFile, tmp_31_cast_fu_286_p3, "tmp_31_cast_fu_286_p3");
    sc_trace(mVcdFile, tmp_31_cast_reg_408, "tmp_31_cast_reg_408");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln80_fu_268_p2, "icmp_ln80_fu_268_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln81_fu_308_p2, "icmp_ln81_fu_308_p2");
    sc_trace(mVcdFile, y_2_fu_327_p2, "y_2_fu_327_p2");
    sc_trace(mVcdFile, y_2_reg_421, "y_2_reg_421");
    sc_trace(mVcdFile, x_2_fu_333_p2, "x_2_fu_333_p2");
    sc_trace(mVcdFile, max_record_reg_431, "max_record_reg_431");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, max_record_3_fu_339_p3, "max_record_3_fu_339_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, m_0_reg_64, "m_0_reg_64");
    sc_trace(mVcdFile, i_0_reg_75, "i_0_reg_75");
    sc_trace(mVcdFile, j_0_reg_86, "j_0_reg_86");
    sc_trace(mVcdFile, max_record_0_reg_98, "max_record_0_reg_98");
    sc_trace(mVcdFile, x_0_reg_111, "x_0_reg_111");
    sc_trace(mVcdFile, max_record_1_reg_121, "max_record_1_reg_121");
    sc_trace(mVcdFile, y_0_reg_133, "y_0_reg_133");
    sc_trace(mVcdFile, zext_ln87_5_fu_303_p1, "zext_ln87_5_fu_303_p1");
    sc_trace(mVcdFile, zext_ln83_4_fu_322_p1, "zext_ln83_4_fu_322_p1");
    sc_trace(mVcdFile, tmp_3_fu_167_p3, "tmp_3_fu_167_p3");
    sc_trace(mVcdFile, x_fu_191_p2, "x_fu_191_p2");
    sc_trace(mVcdFile, zext_ln80_fu_197_p1, "zext_ln80_fu_197_p1");
    sc_trace(mVcdFile, add_ln80_fu_205_p2, "add_ln80_fu_205_p2");
    sc_trace(mVcdFile, zext_ln87_fu_215_p1, "zext_ln87_fu_215_p1");
    sc_trace(mVcdFile, add_ln87_fu_219_p2, "add_ln87_fu_219_p2");
    sc_trace(mVcdFile, y_fu_244_p2, "y_fu_244_p2");
    sc_trace(mVcdFile, zext_ln81_fu_250_p1, "zext_ln81_fu_250_p1");
    sc_trace(mVcdFile, add_ln81_fu_258_p2, "add_ln81_fu_258_p2");
    sc_trace(mVcdFile, zext_ln83_fu_277_p1, "zext_ln83_fu_277_p1");
    sc_trace(mVcdFile, trunc_ln83_fu_273_p1, "trunc_ln83_fu_273_p1");
    sc_trace(mVcdFile, add_ln83_fu_280_p2, "add_ln83_fu_280_p2");
    sc_trace(mVcdFile, zext_ln87_4_fu_294_p1, "zext_ln87_4_fu_294_p1");
    sc_trace(mVcdFile, add_ln87_2_fu_298_p2, "add_ln87_2_fu_298_p2");
    sc_trace(mVcdFile, trunc_ln83_3_fu_313_p1, "trunc_ln83_3_fu_313_p1");
    sc_trace(mVcdFile, add_ln83_2_fu_317_p2, "add_ln83_2_fu_317_p2");
    sc_trace(mVcdFile, tmp_fu_142_p2, "tmp_fu_142_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

max_pool::~max_pool() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete test_hcmp_16ns_16g8j_U16;
}

void max_pool::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv5_2;
}

void max_pool::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln77_fu_232_p2.read(), ap_const_lv1_1))) {
        i_0_reg_75 = i_reg_367.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln73_fu_147_p2.read(), ap_const_lv1_0))) {
        i_0_reg_75 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln75_fu_179_p2.read()))) {
        j_0_reg_86 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_fu_268_p2.read()))) {
        j_0_reg_86 = j_reg_390.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln75_fu_179_p2.read(), ap_const_lv1_1))) {
        m_0_reg_64 = m_reg_349.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        m_0_reg_64 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln81_fu_308_p2.read()))) {
        max_record_0_reg_98 = max_record_1_reg_121.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln77_fu_232_p2.read()))) {
        max_record_0_reg_98 = ap_const_lv16_FC00;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        max_record_1_reg_121 = max_record_3_fu_339_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(icmp_ln80_fu_268_p2.read(), ap_const_lv1_1))) {
        max_record_1_reg_121 = max_record_0_reg_98.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln81_fu_308_p2.read()))) {
        x_0_reg_111 = x_2_fu_333_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln77_fu_232_p2.read()))) {
        x_0_reg_111 = zext_ln80_1_reg_372.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        y_0_reg_133 = y_2_reg_421.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(icmp_ln80_fu_268_p2.read(), ap_const_lv1_1))) {
        y_0_reg_133 = zext_ln81_1_reg_395.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_367 = i_fu_185_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_390 = j_fu_238_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        m_reg_349 = m_fu_153_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        max_record_reg_431 = in_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln75_fu_179_p2.read()))) {
        tmp_28_cast_reg_382 = tmp_28_cast_fu_224_p3.read();
        zext_ln80_1_reg_372 = zext_ln80_1_fu_201_p1.read();
        zext_ln80_2_reg_377 = zext_ln80_2_fu_211_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln80_fu_268_p2.read(), ap_const_lv1_1))) {
        tmp_31_cast_reg_408 = tmp_31_cast_fu_286_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln73_fu_147_p2.read(), ap_const_lv1_0))) {
        tmp_s_reg_354 = tmp_s_fu_159_p3.read();
        zext_ln75_reg_359 = zext_ln75_fu_175_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln81_fu_308_p2.read()))) {
        y_2_reg_421 = y_2_fu_327_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln77_fu_232_p2.read()))) {
        zext_ln81_1_reg_395 = zext_ln81_1_fu_254_p1.read();
        zext_ln81_2_reg_400 = zext_ln81_2_fu_264_p1.read();
    }
}

void max_pool::thread_add_ln80_fu_205_p2() {
    add_ln80_fu_205_p2 = (!ap_const_lv6_2.is_01() || !zext_ln80_fu_197_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_2) + sc_biguint<6>(zext_ln80_fu_197_p1.read()));
}

void max_pool::thread_add_ln81_fu_258_p2() {
    add_ln81_fu_258_p2 = (!ap_const_lv6_2.is_01() || !zext_ln81_fu_250_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_2) + sc_biguint<6>(zext_ln81_fu_250_p1.read()));
}

void max_pool::thread_add_ln83_2_fu_317_p2() {
    add_ln83_2_fu_317_p2 = (!tmp_31_cast_reg_408.read().is_01() || !trunc_ln83_3_fu_313_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_31_cast_reg_408.read()) + sc_biguint<15>(trunc_ln83_3_fu_313_p1.read()));
}

void max_pool::thread_add_ln83_fu_280_p2() {
    add_ln83_fu_280_p2 = (!zext_ln83_fu_277_p1.read().is_01() || !trunc_ln83_fu_273_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln83_fu_277_p1.read()) + sc_biguint<10>(trunc_ln83_fu_273_p1.read()));
}

void max_pool::thread_add_ln87_2_fu_298_p2() {
    add_ln87_2_fu_298_p2 = (!tmp_28_cast_reg_382.read().is_01() || !zext_ln87_4_fu_294_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_28_cast_reg_382.read()) + sc_biguint<13>(zext_ln87_4_fu_294_p1.read()));
}

void max_pool::thread_add_ln87_fu_219_p2() {
    add_ln87_fu_219_p2 = (!zext_ln75_reg_359.read().is_01() || !zext_ln87_fu_215_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln75_reg_359.read()) + sc_biguint<9>(zext_ln87_fu_215_p1.read()));
}

void max_pool::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void max_pool::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void max_pool::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void max_pool::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void max_pool::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void max_pool::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void max_pool::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void max_pool::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void max_pool::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln73_fu_147_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void max_pool::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void max_pool::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln73_fu_147_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void max_pool::thread_i_fu_185_p2() {
    i_fu_185_p2 = (!i_0_reg_75.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_75.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void max_pool::thread_icmp_ln73_fu_147_p2() {
    icmp_ln73_fu_147_p2 = (!m_0_reg_64.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(m_0_reg_64.read() == ap_const_lv4_8);
}

void max_pool::thread_icmp_ln75_fu_179_p2() {
    icmp_ln75_fu_179_p2 = (!i_0_reg_75.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_75.read() == ap_const_lv5_10);
}

void max_pool::thread_icmp_ln77_fu_232_p2() {
    icmp_ln77_fu_232_p2 = (!j_0_reg_86.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_86.read() == ap_const_lv5_10);
}

void max_pool::thread_icmp_ln80_fu_268_p2() {
    icmp_ln80_fu_268_p2 = (!x_0_reg_111.read().is_01() || !zext_ln80_2_reg_377.read().is_01())? sc_lv<1>(): (sc_bigint<32>(x_0_reg_111.read()) < sc_bigint<32>(zext_ln80_2_reg_377.read()));
}

void max_pool::thread_icmp_ln81_fu_308_p2() {
    icmp_ln81_fu_308_p2 = (!y_0_reg_133.read().is_01() || !zext_ln81_2_reg_400.read().is_01())? sc_lv<1>(): (sc_bigint<32>(y_0_reg_133.read()) < sc_bigint<32>(zext_ln81_2_reg_400.read()));
}

void max_pool::thread_in_r_address0() {
    in_r_address0 =  (sc_lv<13>) (zext_ln83_4_fu_322_p1.read());
}

void max_pool::thread_in_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in_r_ce0 = ap_const_logic_1;
    } else {
        in_r_ce0 = ap_const_logic_0;
    }
}

void max_pool::thread_j_fu_238_p2() {
    j_fu_238_p2 = (!j_0_reg_86.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_0_reg_86.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void max_pool::thread_m_fu_153_p2() {
    m_fu_153_p2 = (!m_0_reg_64.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(m_0_reg_64.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void max_pool::thread_max_record_3_fu_339_p3() {
    max_record_3_fu_339_p3 = (!tmp_fu_142_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_fu_142_p2.read()[0].to_bool())? max_record_reg_431.read(): max_record_1_reg_121.read());
}

void max_pool::thread_out_r_address0() {
    out_r_address0 =  (sc_lv<11>) (zext_ln87_5_fu_303_p1.read());
}

void max_pool::thread_out_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void max_pool::thread_out_r_d0() {
    out_r_d0 = max_record_0_reg_98.read();
}

void max_pool::thread_out_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_fu_268_p2.read()))) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void max_pool::thread_tmp_28_cast_fu_224_p3() {
    tmp_28_cast_fu_224_p3 = esl_concat<9,4>(add_ln87_fu_219_p2.read(), ap_const_lv4_0);
}

void max_pool::thread_tmp_31_cast_fu_286_p3() {
    tmp_31_cast_fu_286_p3 = esl_concat<10,5>(add_ln83_fu_280_p2.read(), ap_const_lv5_0);
}

void max_pool::thread_tmp_3_fu_167_p3() {
    tmp_3_fu_167_p3 = esl_concat<4,4>(m_0_reg_64.read(), ap_const_lv4_0);
}

void max_pool::thread_tmp_s_fu_159_p3() {
    tmp_s_fu_159_p3 = esl_concat<4,5>(m_0_reg_64.read(), ap_const_lv5_0);
}

void max_pool::thread_trunc_ln83_3_fu_313_p1() {
    trunc_ln83_3_fu_313_p1 = y_0_reg_133.read().range(15-1, 0);
}

void max_pool::thread_trunc_ln83_fu_273_p1() {
    trunc_ln83_fu_273_p1 = x_0_reg_111.read().range(10-1, 0);
}

void max_pool::thread_x_2_fu_333_p2() {
    x_2_fu_333_p2 = (!x_0_reg_111.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(x_0_reg_111.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void max_pool::thread_x_fu_191_p2() {
    x_fu_191_p2 = (!ap_const_lv5_1.is_01())? sc_lv<5>(): i_0_reg_75.read() << (unsigned short)ap_const_lv5_1.to_uint();
}

void max_pool::thread_y_2_fu_327_p2() {
    y_2_fu_327_p2 = (!ap_const_lv32_1.is_01() || !y_0_reg_133.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(y_0_reg_133.read()));
}

void max_pool::thread_y_fu_244_p2() {
    y_fu_244_p2 = (!ap_const_lv5_1.is_01())? sc_lv<5>(): j_0_reg_86.read() << (unsigned short)ap_const_lv5_1.to_uint();
}

void max_pool::thread_zext_ln75_fu_175_p1() {
    zext_ln75_fu_175_p1 = esl_zext<9,8>(tmp_3_fu_167_p3.read());
}

void max_pool::thread_zext_ln80_1_fu_201_p1() {
    zext_ln80_1_fu_201_p1 = esl_zext<32,5>(x_fu_191_p2.read());
}

void max_pool::thread_zext_ln80_2_fu_211_p1() {
    zext_ln80_2_fu_211_p1 = esl_zext<32,6>(add_ln80_fu_205_p2.read());
}

void max_pool::thread_zext_ln80_fu_197_p1() {
    zext_ln80_fu_197_p1 = esl_zext<6,5>(x_fu_191_p2.read());
}

void max_pool::thread_zext_ln81_1_fu_254_p1() {
    zext_ln81_1_fu_254_p1 = esl_zext<32,5>(y_fu_244_p2.read());
}

void max_pool::thread_zext_ln81_2_fu_264_p1() {
    zext_ln81_2_fu_264_p1 = esl_zext<32,6>(add_ln81_fu_258_p2.read());
}

void max_pool::thread_zext_ln81_fu_250_p1() {
    zext_ln81_fu_250_p1 = esl_zext<6,5>(y_fu_244_p2.read());
}

void max_pool::thread_zext_ln83_4_fu_322_p1() {
    zext_ln83_4_fu_322_p1 = esl_zext<64,15>(add_ln83_2_fu_317_p2.read());
}

void max_pool::thread_zext_ln83_fu_277_p1() {
    zext_ln83_fu_277_p1 = esl_zext<10,9>(tmp_s_reg_354.read());
}

void max_pool::thread_zext_ln87_4_fu_294_p1() {
    zext_ln87_4_fu_294_p1 = esl_zext<13,5>(j_0_reg_86.read());
}

void max_pool::thread_zext_ln87_5_fu_303_p1() {
    zext_ln87_5_fu_303_p1 = esl_zext<64,13>(add_ln87_2_fu_298_p2.read());
}

void max_pool::thread_zext_ln87_fu_215_p1() {
    zext_ln87_fu_215_p1 = esl_zext<9,5>(i_0_reg_75.read());
}

void max_pool::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln73_fu_147_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln75_fu_179_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln77_fu_232_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_fu_268_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln81_fu_308_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

