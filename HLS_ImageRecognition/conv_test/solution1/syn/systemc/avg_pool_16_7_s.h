// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _avg_pool_16_7_s_HH_
#define _avg_pool_16_7_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "test_hadd_16ns_16eOg.h"
#include "test_hdiv_16ns_16kbM.h"

namespace ap_rtl {

struct avg_pool_16_7_s : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<16> > in_r_q0;
    sc_out< sc_lv<4> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<16> > out_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<16> > ap_var_for_const1;


    // Module declarations
    avg_pool_16_7_s(sc_module_name name);
    SC_HAS_PROCESS(avg_pool_16_7_s);

    ~avg_pool_16_7_s();

    sc_trace_file* mVcdFile;

    test_hadd_16ns_16eOg<1,2,16,16,16>* test_hadd_16ns_16eOg_U34;
    test_hdiv_16ns_16kbM<1,5,16,16,16>* test_hdiv_16ns_16kbM_U35;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > i_fu_134_p2;
    sc_signal< sc_lv<5> > i_reg_242;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln104_fu_140_p1;
    sc_signal< sc_lv<64> > zext_ln104_reg_247;
    sc_signal< sc_lv<1> > icmp_ln96_fu_128_p2;
    sc_signal< sc_lv<10> > sext_ln104_fu_166_p1;
    sc_signal< sc_lv<10> > sext_ln104_reg_252;
    sc_signal< sc_lv<3> > j_fu_176_p2;
    sc_signal< sc_lv<3> > j_reg_260;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<11> > sub_ln104_1_fu_207_p2;
    sc_signal< sc_lv<11> > sub_ln104_1_reg_265;
    sc_signal< sc_lv<1> > icmp_ln99_fu_170_p2;
    sc_signal< sc_lv<3> > k_fu_219_p2;
    sc_signal< sc_lv<3> > k_reg_273;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln101_fu_213_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<16> > grp_fu_115_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<5> > i_0_reg_58;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<16> > m_0_reg_69;
    sc_signal< sc_lv<3> > j_0_reg_81;
    sc_signal< sc_lv<16> > m_1_reg_92;
    sc_signal< sc_lv<3> > k_0_reg_104;
    sc_signal< sc_lv<64> > zext_ln104_5_fu_234_p1;
    sc_signal< sc_lv<16> > grp_fu_121_p2;
    sc_signal< sc_lv<8> > tmp_s_fu_148_p3;
    sc_signal< sc_lv<9> > zext_ln104_2_fu_156_p1;
    sc_signal< sc_lv<9> > zext_ln104_1_fu_144_p1;
    sc_signal< sc_lv<9> > sub_ln104_fu_160_p2;
    sc_signal< sc_lv<10> > zext_ln104_3_fu_182_p1;
    sc_signal< sc_lv<10> > add_ln104_fu_186_p2;
    sc_signal< sc_lv<8> > trunc_ln104_fu_195_p1;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_199_p3;
    sc_signal< sc_lv<11> > sext_ln104_1_fu_191_p1;
    sc_signal< sc_lv<11> > zext_ln104_4_fu_225_p1;
    sc_signal< sc_lv<11> > add_ln104_1_fu_229_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<16> ap_const_lv16_5220;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln104_1_fu_229_p2();
    void thread_add_ln104_fu_186_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_134_p2();
    void thread_icmp_ln101_fu_213_p2();
    void thread_icmp_ln96_fu_128_p2();
    void thread_icmp_ln99_fu_170_p2();
    void thread_in_r_address0();
    void thread_in_r_ce0();
    void thread_j_fu_176_p2();
    void thread_k_fu_219_p2();
    void thread_out_r_address0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_p_shl1_cast_fu_199_p3();
    void thread_sext_ln104_1_fu_191_p1();
    void thread_sext_ln104_fu_166_p1();
    void thread_sub_ln104_1_fu_207_p2();
    void thread_sub_ln104_fu_160_p2();
    void thread_tmp_s_fu_148_p3();
    void thread_trunc_ln104_fu_195_p1();
    void thread_zext_ln104_1_fu_144_p1();
    void thread_zext_ln104_2_fu_156_p1();
    void thread_zext_ln104_3_fu_182_p1();
    void thread_zext_ln104_4_fu_225_p1();
    void thread_zext_ln104_5_fu_234_p1();
    void thread_zext_ln104_fu_140_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
