// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "test_hcmp_16ns_16g8j.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<16> > in_r_q0;
    sc_out< sc_lv<10> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<16> > out_r_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    test_hcmp_16ns_16g8j<1,1,16,16,1>* test_hcmp_16ns_16g8j_U31;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > m_fu_163_p2;
    sc_signal< sc_lv<5> > m_reg_427;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<33> > sext_ln83_fu_203_p1;
    sc_signal< sc_lv<33> > sext_ln83_reg_432;
    sc_signal< sc_lv<1> > icmp_ln73_fu_157_p2;
    sc_signal< sc_lv<10> > sext_ln87_fu_225_p1;
    sc_signal< sc_lv<10> > sext_ln87_reg_437;
    sc_signal< sc_lv<3> > i_fu_235_p2;
    sc_signal< sc_lv<3> > i_reg_445;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > zext_ln80_fu_249_p1;
    sc_signal< sc_lv<32> > zext_ln80_reg_450;
    sc_signal< sc_lv<1> > icmp_ln75_fu_229_p2;
    sc_signal< sc_lv<32> > zext_ln80_1_fu_259_p1;
    sc_signal< sc_lv<32> > zext_ln80_1_reg_455;
    sc_signal< sc_lv<11> > sub_ln87_1_fu_288_p2;
    sc_signal< sc_lv<11> > sub_ln87_1_reg_460;
    sc_signal< sc_lv<3> > j_fu_300_p2;
    sc_signal< sc_lv<3> > j_reg_468;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > zext_ln81_fu_314_p1;
    sc_signal< sc_lv<32> > zext_ln81_reg_473;
    sc_signal< sc_lv<1> > icmp_ln77_fu_294_p2;
    sc_signal< sc_lv<32> > zext_ln81_1_fu_324_p1;
    sc_signal< sc_lv<32> > zext_ln81_1_reg_478;
    sc_signal< sc_lv<13> > sub_ln83_1_fu_366_p2;
    sc_signal< sc_lv<13> > sub_ln83_1_reg_486;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln80_fu_328_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln81_fu_386_p2;
    sc_signal< sc_lv<32> > y_1_fu_405_p2;
    sc_signal< sc_lv<32> > y_1_reg_499;
    sc_signal< sc_lv<32> > x_1_fu_411_p2;
    sc_signal< sc_lv<16> > max_record_reg_509;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<16> > max_record_2_fu_417_p3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<5> > m_0_reg_74;
    sc_signal< sc_lv<3> > i_0_reg_85;
    sc_signal< sc_lv<3> > j_0_reg_96;
    sc_signal< sc_lv<16> > max_record_0_reg_108;
    sc_signal< sc_lv<32> > x_0_reg_121;
    sc_signal< sc_lv<16> > max_record_1_reg_131;
    sc_signal< sc_lv<32> > y_0_reg_143;
    sc_signal< sc_lv<64> > zext_ln87_3_fu_381_p1;
    sc_signal< sc_lv<64> > zext_ln83_3_fu_400_p1;
    sc_signal< sc_lv<9> > tmp_s_fu_173_p3;
    sc_signal< sc_lv<6> > tmp_1_fu_185_p3;
    sc_signal< sc_lv<10> > zext_ln83_1_fu_181_p1;
    sc_signal< sc_lv<10> > zext_ln83_2_fu_193_p1;
    sc_signal< sc_lv<10> > sub_ln83_fu_197_p2;
    sc_signal< sc_lv<8> > tmp_2_fu_207_p3;
    sc_signal< sc_lv<9> > zext_ln87_fu_215_p1;
    sc_signal< sc_lv<9> > zext_ln83_fu_169_p1;
    sc_signal< sc_lv<9> > sub_ln87_fu_219_p2;
    sc_signal< sc_lv<4> > x_fu_241_p3;
    sc_signal< sc_lv<4> > add_ln80_fu_253_p2;
    sc_signal< sc_lv<10> > zext_ln87_1_fu_263_p1;
    sc_signal< sc_lv<10> > add_ln87_fu_267_p2;
    sc_signal< sc_lv<8> > trunc_ln87_fu_276_p1;
    sc_signal< sc_lv<11> > p_shl3_cast_fu_280_p3;
    sc_signal< sc_lv<11> > sext_ln87_1_fu_272_p1;
    sc_signal< sc_lv<4> > y_fu_306_p3;
    sc_signal< sc_lv<4> > add_ln81_fu_318_p2;
    sc_signal< sc_lv<33> > sext_ln83_1_fu_333_p1;
    sc_signal< sc_lv<33> > add_ln83_fu_337_p2;
    sc_signal< sc_lv<9> > trunc_ln83_fu_342_p1;
    sc_signal< sc_lv<12> > trunc_ln83_1_fu_354_p1;
    sc_signal< sc_lv<13> > p_shl4_cast_fu_346_p3;
    sc_signal< sc_lv<13> > p_shl5_cast_fu_358_p3;
    sc_signal< sc_lv<11> > zext_ln87_2_fu_372_p1;
    sc_signal< sc_lv<11> > add_ln87_1_fu_376_p2;
    sc_signal< sc_lv<13> > trunc_ln83_2_fu_391_p1;
    sc_signal< sc_lv<13> > add_ln83_1_fu_395_p2;
    sc_signal< sc_lv<1> > tmp_fu_152_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<16> ap_const_lv16_FC00;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln80_fu_253_p2();
    void thread_add_ln81_fu_318_p2();
    void thread_add_ln83_1_fu_395_p2();
    void thread_add_ln83_fu_337_p2();
    void thread_add_ln87_1_fu_376_p2();
    void thread_add_ln87_fu_267_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_235_p2();
    void thread_icmp_ln73_fu_157_p2();
    void thread_icmp_ln75_fu_229_p2();
    void thread_icmp_ln77_fu_294_p2();
    void thread_icmp_ln80_fu_328_p2();
    void thread_icmp_ln81_fu_386_p2();
    void thread_in_r_address0();
    void thread_in_r_ce0();
    void thread_j_fu_300_p2();
    void thread_m_fu_163_p2();
    void thread_max_record_2_fu_417_p3();
    void thread_out_r_address0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_p_shl3_cast_fu_280_p3();
    void thread_p_shl4_cast_fu_346_p3();
    void thread_p_shl5_cast_fu_358_p3();
    void thread_sext_ln83_1_fu_333_p1();
    void thread_sext_ln83_fu_203_p1();
    void thread_sext_ln87_1_fu_272_p1();
    void thread_sext_ln87_fu_225_p1();
    void thread_sub_ln83_1_fu_366_p2();
    void thread_sub_ln83_fu_197_p2();
    void thread_sub_ln87_1_fu_288_p2();
    void thread_sub_ln87_fu_219_p2();
    void thread_tmp_1_fu_185_p3();
    void thread_tmp_2_fu_207_p3();
    void thread_tmp_s_fu_173_p3();
    void thread_trunc_ln83_1_fu_354_p1();
    void thread_trunc_ln83_2_fu_391_p1();
    void thread_trunc_ln83_fu_342_p1();
    void thread_trunc_ln87_fu_276_p1();
    void thread_x_1_fu_411_p2();
    void thread_x_fu_241_p3();
    void thread_y_1_fu_405_p2();
    void thread_y_fu_306_p3();
    void thread_zext_ln80_1_fu_259_p1();
    void thread_zext_ln80_fu_249_p1();
    void thread_zext_ln81_1_fu_324_p1();
    void thread_zext_ln81_fu_314_p1();
    void thread_zext_ln83_1_fu_181_p1();
    void thread_zext_ln83_2_fu_193_p1();
    void thread_zext_ln83_3_fu_400_p1();
    void thread_zext_ln83_fu_169_p1();
    void thread_zext_ln87_1_fu_263_p1();
    void thread_zext_ln87_2_fu_372_p1();
    void thread_zext_ln87_3_fu_381_p1();
    void thread_zext_ln87_fu_215_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
