// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mean_24_11_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mean_24_11_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mean_24_11_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> mean_24_11_s::ap_ST_fsm_state1 = "1";
const sc_lv<10> mean_24_11_s::ap_ST_fsm_state2 = "10";
const sc_lv<10> mean_24_11_s::ap_ST_fsm_state3 = "100";
const sc_lv<10> mean_24_11_s::ap_ST_fsm_state4 = "1000";
const sc_lv<10> mean_24_11_s::ap_ST_fsm_state5 = "10000";
const sc_lv<10> mean_24_11_s::ap_ST_fsm_state6 = "100000";
const sc_lv<10> mean_24_11_s::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> mean_24_11_s::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> mean_24_11_s::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> mean_24_11_s::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> mean_24_11_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> mean_24_11_s::ap_const_lv32_1 = "1";
const sc_lv<1> mean_24_11_s::ap_const_lv1_0 = "0";
const sc_lv<32> mean_24_11_s::ap_const_lv32_2 = "10";
const sc_lv<32> mean_24_11_s::ap_const_lv32_3 = "11";
const sc_lv<32> mean_24_11_s::ap_const_lv32_4 = "100";
const sc_lv<32> mean_24_11_s::ap_const_lv32_5 = "101";
const sc_lv<5> mean_24_11_s::ap_const_lv5_0 = "00000";
const sc_lv<32> mean_24_11_s::ap_const_lv32_9 = "1001";
const sc_lv<9> mean_24_11_s::ap_const_lv9_0 = "000000000";
const sc_lv<16> mean_24_11_s::ap_const_lv16_0 = "0000000000000000";
const sc_lv<1> mean_24_11_s::ap_const_lv1_1 = "1";
const sc_lv<4> mean_24_11_s::ap_const_lv4_0 = "0000";
const sc_lv<16> mean_24_11_s::ap_const_lv16_5790 = "101011110010000";
const sc_lv<9> mean_24_11_s::ap_const_lv9_B = "1011";
const sc_lv<5> mean_24_11_s::ap_const_lv5_18 = "11000";
const sc_lv<5> mean_24_11_s::ap_const_lv5_1 = "1";
const sc_lv<4> mean_24_11_s::ap_const_lv4_B = "1011";
const sc_lv<4> mean_24_11_s::ap_const_lv4_1 = "1";
const sc_lv<12> mean_24_11_s::ap_const_lv12_B = "1011";
const bool mean_24_11_s::ap_const_boolean_1 = true;

mean_24_11_s::mean_24_11_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    test_hadd_16ns_16eOg_U49 = new test_hadd_16ns_16eOg<1,2,16,16,16>("test_hadd_16ns_16eOg_U49");
    test_hadd_16ns_16eOg_U49->clk(ap_clk);
    test_hadd_16ns_16eOg_U49->reset(ap_rst);
    test_hadd_16ns_16eOg_U49->din0(m_1_reg_106);
    test_hadd_16ns_16eOg_U49->din1(input_r_q0);
    test_hadd_16ns_16eOg_U49->ce(ap_var_for_const0);
    test_hadd_16ns_16eOg_U49->dout(grp_fu_129_p2);
    test_hdiv_16ns_16pcA_U50 = new test_hdiv_16ns_16pcA<1,5,16,16,16>("test_hdiv_16ns_16pcA_U50");
    test_hdiv_16ns_16pcA_U50->clk(ap_clk);
    test_hdiv_16ns_16pcA_U50->reset(ap_rst);
    test_hdiv_16ns_16pcA_U50->din0(m_0_reg_83);
    test_hdiv_16ns_16pcA_U50->din1(ap_var_for_const1);
    test_hdiv_16ns_16pcA_U50->ce(ap_var_for_const0);
    test_hdiv_16ns_16pcA_U50->dout(grp_fu_135_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln105_fu_142_p2);
    sensitive << ( phi_mul_reg_71 );

    SC_METHOD(thread_add_ln113_1_fu_212_p2);
    sensitive << ( mul_ln113_reg_248 );
    sensitive << ( zext_ln113_3_fu_208_p1 );

    SC_METHOD(thread_add_ln113_fu_180_p2);
    sensitive << ( phi_mul_reg_71 );
    sensitive << ( zext_ln113_1_fu_176_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln105_fu_148_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln105_fu_148_p2 );

    SC_METHOD(thread_i_fu_154_p2);
    sensitive << ( i_0_reg_60 );

    SC_METHOD(thread_icmp_ln105_fu_148_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_60 );

    SC_METHOD(thread_icmp_ln108_fu_164_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_95 );

    SC_METHOD(thread_icmp_ln110_fu_196_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_0_reg_118 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln113_4_fu_217_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_j_fu_170_p2);
    sensitive << ( j_0_reg_95 );

    SC_METHOD(thread_k_fu_202_p2);
    sensitive << ( k_0_reg_118 );

    SC_METHOD(thread_mul_ln113_fu_190_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( mul_ln113_fu_190_p00 );

    SC_METHOD(thread_mul_ln113_fu_190_p00);
    sensitive << ( add_ln113_fu_180_p2 );

    SC_METHOD(thread_mul_ln113_fu_190_p2);
    sensitive << ( mul_ln113_fu_190_p0 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( zext_ln113_reg_235 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_fu_135_p2 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_zext_ln113_1_fu_176_p1);
    sensitive << ( j_0_reg_95 );

    SC_METHOD(thread_zext_ln113_3_fu_208_p1);
    sensitive << ( k_0_reg_118 );

    SC_METHOD(thread_zext_ln113_4_fu_217_p1);
    sensitive << ( add_ln113_1_fu_212_p2 );

    SC_METHOD(thread_zext_ln113_fu_160_p1);
    sensitive << ( i_0_reg_60 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln105_fu_148_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln108_fu_164_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln110_fu_196_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mean_24_11_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, add_ln105_fu_142_p2, "add_ln105_fu_142_p2");
    sc_trace(mVcdFile, add_ln105_reg_222, "add_ln105_reg_222");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_154_p2, "i_fu_154_p2");
    sc_trace(mVcdFile, i_reg_230, "i_reg_230");
    sc_trace(mVcdFile, zext_ln113_fu_160_p1, "zext_ln113_fu_160_p1");
    sc_trace(mVcdFile, zext_ln113_reg_235, "zext_ln113_reg_235");
    sc_trace(mVcdFile, icmp_ln105_fu_148_p2, "icmp_ln105_fu_148_p2");
    sc_trace(mVcdFile, j_fu_170_p2, "j_fu_170_p2");
    sc_trace(mVcdFile, j_reg_243, "j_reg_243");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, mul_ln113_fu_190_p2, "mul_ln113_fu_190_p2");
    sc_trace(mVcdFile, mul_ln113_reg_248, "mul_ln113_reg_248");
    sc_trace(mVcdFile, icmp_ln108_fu_164_p2, "icmp_ln108_fu_164_p2");
    sc_trace(mVcdFile, k_fu_202_p2, "k_fu_202_p2");
    sc_trace(mVcdFile, k_reg_256, "k_reg_256");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln110_fu_196_p2, "icmp_ln110_fu_196_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_129_p2, "grp_fu_129_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_0_reg_60, "i_0_reg_60");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, phi_mul_reg_71, "phi_mul_reg_71");
    sc_trace(mVcdFile, m_0_reg_83, "m_0_reg_83");
    sc_trace(mVcdFile, j_0_reg_95, "j_0_reg_95");
    sc_trace(mVcdFile, m_1_reg_106, "m_1_reg_106");
    sc_trace(mVcdFile, k_0_reg_118, "k_0_reg_118");
    sc_trace(mVcdFile, zext_ln113_4_fu_217_p1, "zext_ln113_4_fu_217_p1");
    sc_trace(mVcdFile, grp_fu_135_p2, "grp_fu_135_p2");
    sc_trace(mVcdFile, zext_ln113_1_fu_176_p1, "zext_ln113_1_fu_176_p1");
    sc_trace(mVcdFile, add_ln113_fu_180_p2, "add_ln113_fu_180_p2");
    sc_trace(mVcdFile, mul_ln113_fu_190_p0, "mul_ln113_fu_190_p0");
    sc_trace(mVcdFile, zext_ln113_3_fu_208_p1, "zext_ln113_3_fu_208_p1");
    sc_trace(mVcdFile, add_ln113_1_fu_212_p2, "add_ln113_1_fu_212_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul_ln113_fu_190_p00, "mul_ln113_fu_190_p00");
#endif

    }
}

mean_24_11_s::~mean_24_11_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete test_hadd_16ns_16eOg_U49;
    delete test_hdiv_16ns_16pcA_U50;
}

void mean_24_11_s::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mean_24_11_s::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv16_5790;
}

void mean_24_11_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_0_reg_60 = i_reg_230.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_60 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln110_fu_196_p2.read(), ap_const_lv1_1))) {
        j_0_reg_95 = j_reg_243.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln105_fu_148_p2.read(), ap_const_lv1_0))) {
        j_0_reg_95 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_164_p2.read()))) {
        k_0_reg_118 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        k_0_reg_118 = k_reg_256.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln110_fu_196_p2.read(), ap_const_lv1_1))) {
        m_0_reg_83 = m_1_reg_106.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln105_fu_148_p2.read(), ap_const_lv1_0))) {
        m_0_reg_83 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_164_p2.read()))) {
        m_1_reg_106 = m_0_reg_83.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_1_reg_106 = grp_fu_129_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        phi_mul_reg_71 = add_ln105_reg_222.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_71 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln105_reg_222 = add_ln105_fu_142_p2.read();
        i_reg_230 = i_fu_154_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_243 = j_fu_170_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_reg_256 = k_fu_202_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_164_p2.read()))) {
        mul_ln113_reg_248 = mul_ln113_fu_190_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln105_fu_148_p2.read(), ap_const_lv1_0))) {
        zext_ln113_reg_235 = zext_ln113_fu_160_p1.read();
    }
}

void mean_24_11_s::thread_add_ln105_fu_142_p2() {
    add_ln105_fu_142_p2 = (!phi_mul_reg_71.read().is_01() || !ap_const_lv9_B.is_01())? sc_lv<9>(): (sc_biguint<9>(phi_mul_reg_71.read()) + sc_biguint<9>(ap_const_lv9_B));
}

void mean_24_11_s::thread_add_ln113_1_fu_212_p2() {
    add_ln113_1_fu_212_p2 = (!mul_ln113_reg_248.read().is_01() || !zext_ln113_3_fu_208_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(mul_ln113_reg_248.read()) + sc_biguint<12>(zext_ln113_3_fu_208_p1.read()));
}

void mean_24_11_s::thread_add_ln113_fu_180_p2() {
    add_ln113_fu_180_p2 = (!phi_mul_reg_71.read().is_01() || !zext_ln113_1_fu_176_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(phi_mul_reg_71.read()) + sc_biguint<9>(zext_ln113_1_fu_176_p1.read()));
}

void mean_24_11_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mean_24_11_s::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void mean_24_11_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mean_24_11_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void mean_24_11_s::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void mean_24_11_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void mean_24_11_s::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void mean_24_11_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln105_fu_148_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mean_24_11_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mean_24_11_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln105_fu_148_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mean_24_11_s::thread_i_fu_154_p2() {
    i_fu_154_p2 = (!i_0_reg_60.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_60.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void mean_24_11_s::thread_icmp_ln105_fu_148_p2() {
    icmp_ln105_fu_148_p2 = (!i_0_reg_60.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_60.read() == ap_const_lv5_18);
}

void mean_24_11_s::thread_icmp_ln108_fu_164_p2() {
    icmp_ln108_fu_164_p2 = (!j_0_reg_95.read().is_01() || !ap_const_lv4_B.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_95.read() == ap_const_lv4_B);
}

void mean_24_11_s::thread_icmp_ln110_fu_196_p2() {
    icmp_ln110_fu_196_p2 = (!k_0_reg_118.read().is_01() || !ap_const_lv4_B.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_118.read() == ap_const_lv4_B);
}

void mean_24_11_s::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<12>) (zext_ln113_4_fu_217_p1.read());
}

void mean_24_11_s::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void mean_24_11_s::thread_j_fu_170_p2() {
    j_fu_170_p2 = (!j_0_reg_95.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_reg_95.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mean_24_11_s::thread_k_fu_202_p2() {
    k_fu_202_p2 = (!k_0_reg_118.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_0_reg_118.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mean_24_11_s::thread_mul_ln113_fu_190_p0() {
    mul_ln113_fu_190_p0 =  (sc_lv<9>) (mul_ln113_fu_190_p00.read());
}

void mean_24_11_s::thread_mul_ln113_fu_190_p00() {
    mul_ln113_fu_190_p00 = esl_zext<12,9>(add_ln113_fu_180_p2.read());
}

void mean_24_11_s::thread_mul_ln113_fu_190_p2() {
    mul_ln113_fu_190_p2 = (!mul_ln113_fu_190_p0.read().is_01() || !ap_const_lv12_B.is_01())? sc_lv<12>(): sc_biguint<9>(mul_ln113_fu_190_p0.read()) * sc_biguint<12>(ap_const_lv12_B);
}

void mean_24_11_s::thread_out_r_address0() {
    out_r_address0 =  (sc_lv<5>) (zext_ln113_reg_235.read());
}

void mean_24_11_s::thread_out_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void mean_24_11_s::thread_out_r_d0() {
    out_r_d0 = grp_fu_135_p2.read();
}

void mean_24_11_s::thread_out_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void mean_24_11_s::thread_zext_ln113_1_fu_176_p1() {
    zext_ln113_1_fu_176_p1 = esl_zext<9,4>(j_0_reg_95.read());
}

void mean_24_11_s::thread_zext_ln113_3_fu_208_p1() {
    zext_ln113_3_fu_208_p1 = esl_zext<12,4>(k_0_reg_118.read());
}

void mean_24_11_s::thread_zext_ln113_4_fu_217_p1() {
    zext_ln113_4_fu_217_p1 = esl_zext<64,12>(add_ln113_1_fu_212_p2.read());
}

void mean_24_11_s::thread_zext_ln113_fu_160_p1() {
    zext_ln113_fu_160_p1 = esl_zext<64,5>(i_0_reg_60.read());
}

void mean_24_11_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln105_fu_148_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_164_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln110_fu_196_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXX";
            break;
    }
}

}

